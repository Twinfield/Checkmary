//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CheckmarxTool.CxSDKWebService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CliScanArgs", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class CliScanArgs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.ProjectSettings PrjSettingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.SourceCodeSettings SrcCodeSettingsField;
        
        private bool IsPrivateScanField;
        
        private bool IsIncrementalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        private bool IgnoreScanWithUnchangedCodeField;
        
        private CheckmarxTool.CxSDKWebService.CxClientType ClientOriginField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public CheckmarxTool.CxSDKWebService.ProjectSettings PrjSettings {
            get {
                return this.PrjSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.PrjSettingsField, value) != true)) {
                    this.PrjSettingsField = value;
                    this.RaisePropertyChanged("PrjSettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public CheckmarxTool.CxSDKWebService.SourceCodeSettings SrcCodeSettings {
            get {
                return this.SrcCodeSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.SrcCodeSettingsField, value) != true)) {
                    this.SrcCodeSettingsField = value;
                    this.RaisePropertyChanged("SrcCodeSettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public bool IsPrivateScan {
            get {
                return this.IsPrivateScanField;
            }
            set {
                if ((this.IsPrivateScanField.Equals(value) != true)) {
                    this.IsPrivateScanField = value;
                    this.RaisePropertyChanged("IsPrivateScan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public bool IsIncremental {
            get {
                return this.IsIncrementalField;
            }
            set {
                if ((this.IsIncrementalField.Equals(value) != true)) {
                    this.IsIncrementalField = value;
                    this.RaisePropertyChanged("IsIncremental");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public bool IgnoreScanWithUnchangedCode {
            get {
                return this.IgnoreScanWithUnchangedCodeField;
            }
            set {
                if ((this.IgnoreScanWithUnchangedCodeField.Equals(value) != true)) {
                    this.IgnoreScanWithUnchangedCodeField = value;
                    this.RaisePropertyChanged("IgnoreScanWithUnchangedCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public CheckmarxTool.CxSDKWebService.CxClientType ClientOrigin {
            get {
                return this.ClientOriginField;
            }
            set {
                if ((this.ClientOriginField.Equals(value) != true)) {
                    this.ClientOriginField = value;
                    this.RaisePropertyChanged("ClientOrigin");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProjectSettings", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class ProjectSettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long projectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectNameField;
        
        private long PresetIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssociatedGroupIDField;
        
        private long ScanConfigurationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerField;
        
        private bool IsPublicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.ProjectSharedLocation OpenSourceSettingsField;
        
        private CheckmarxTool.CxSDKWebService.ProjectOrigin OpenSourceAnalysisOriginField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long projectID {
            get {
                return this.projectIDField;
            }
            set {
                if ((this.projectIDField.Equals(value) != true)) {
                    this.projectIDField = value;
                    this.RaisePropertyChanged("projectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string ProjectName {
            get {
                return this.ProjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNameField, value) != true)) {
                    this.ProjectNameField = value;
                    this.RaisePropertyChanged("ProjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public long PresetID {
            get {
                return this.PresetIDField;
            }
            set {
                if ((this.PresetIDField.Equals(value) != true)) {
                    this.PresetIDField = value;
                    this.RaisePropertyChanged("PresetID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string AssociatedGroupID {
            get {
                return this.AssociatedGroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AssociatedGroupIDField, value) != true)) {
                    this.AssociatedGroupIDField = value;
                    this.RaisePropertyChanged("AssociatedGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public long ScanConfigurationID {
            get {
                return this.ScanConfigurationIDField;
            }
            set {
                if ((this.ScanConfigurationIDField.Equals(value) != true)) {
                    this.ScanConfigurationIDField = value;
                    this.RaisePropertyChanged("ScanConfigurationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public bool IsPublic {
            get {
                return this.IsPublicField;
            }
            set {
                if ((this.IsPublicField.Equals(value) != true)) {
                    this.IsPublicField = value;
                    this.RaisePropertyChanged("IsPublic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public CheckmarxTool.CxSDKWebService.ProjectSharedLocation OpenSourceSettings {
            get {
                return this.OpenSourceSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.OpenSourceSettingsField, value) != true)) {
                    this.OpenSourceSettingsField = value;
                    this.RaisePropertyChanged("OpenSourceSettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=9)]
        public CheckmarxTool.CxSDKWebService.ProjectOrigin OpenSourceAnalysisOrigin {
            get {
                return this.OpenSourceAnalysisOriginField;
            }
            set {
                if ((this.OpenSourceAnalysisOriginField.Equals(value) != true)) {
                    this.OpenSourceAnalysisOriginField = value;
                    this.RaisePropertyChanged("OpenSourceAnalysisOrigin");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SourceCodeSettings", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class SourceCodeSettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private CheckmarxTool.CxSDKWebService.SourceLocationType SourceOriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.Credentials UserCredentialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.ScanPath[] PathListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.SourceControlSettings SourceControlSettingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.LocalCodeContainer PackagedCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourcePullingActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.SourceFilterPatterns SourceFilterListsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public CheckmarxTool.CxSDKWebService.SourceLocationType SourceOrigin {
            get {
                return this.SourceOriginField;
            }
            set {
                if ((this.SourceOriginField.Equals(value) != true)) {
                    this.SourceOriginField = value;
                    this.RaisePropertyChanged("SourceOrigin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public CheckmarxTool.CxSDKWebService.Credentials UserCredentials {
            get {
                return this.UserCredentialsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserCredentialsField, value) != true)) {
                    this.UserCredentialsField = value;
                    this.RaisePropertyChanged("UserCredentials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public CheckmarxTool.CxSDKWebService.ScanPath[] PathList {
            get {
                return this.PathListField;
            }
            set {
                if ((object.ReferenceEquals(this.PathListField, value) != true)) {
                    this.PathListField = value;
                    this.RaisePropertyChanged("PathList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public CheckmarxTool.CxSDKWebService.SourceControlSettings SourceControlSetting {
            get {
                return this.SourceControlSettingField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceControlSettingField, value) != true)) {
                    this.SourceControlSettingField = value;
                    this.RaisePropertyChanged("SourceControlSetting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public CheckmarxTool.CxSDKWebService.LocalCodeContainer PackagedCode {
            get {
                return this.PackagedCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PackagedCodeField, value) != true)) {
                    this.PackagedCodeField = value;
                    this.RaisePropertyChanged("PackagedCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string SourcePullingAction {
            get {
                return this.SourcePullingActionField;
            }
            set {
                if ((object.ReferenceEquals(this.SourcePullingActionField, value) != true)) {
                    this.SourcePullingActionField = value;
                    this.RaisePropertyChanged("SourcePullingAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public CheckmarxTool.CxSDKWebService.SourceFilterPatterns SourceFilterLists {
            get {
                return this.SourceFilterListsField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceFilterListsField, value) != true)) {
                    this.SourceFilterListsField = value;
                    this.RaisePropertyChanged("SourceFilterLists");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxClientType", Namespace="http://Checkmarx.com/v7")]
    public enum CxClientType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WebPortal = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CLI = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Eclipse = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VS = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InteliJ = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Audit = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SDK = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Jenkins = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TFSBuild = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Importer = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sonar = 12,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProjectSharedLocation", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class ProjectSharedLocation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.ArrayOfString PathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.Credentials CredentialsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public CheckmarxTool.CxSDKWebService.ArrayOfString Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public CheckmarxTool.CxSDKWebService.Credentials Credentials {
            get {
                return this.CredentialsField;
            }
            set {
                if ((object.ReferenceEquals(this.CredentialsField, value) != true)) {
                    this.CredentialsField = value;
                    this.RaisePropertyChanged("Credentials");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProjectOrigin", Namespace="http://Checkmarx.com/v7")]
    public enum ProjectOrigin : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LocalPath = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SharedPath = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TFS = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        External = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SVN = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CVS = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GIT = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Perforce = 7,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Credentials", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class Credentials : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string Pass {
            get {
                return this.PassField;
            }
            set {
                if ((object.ReferenceEquals(this.PassField, value) != true)) {
                    this.PassField = value;
                    this.RaisePropertyChanged("Pass");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfString", Namespace="http://Checkmarx.com/v7", ItemName="string")]
    [System.SerializableAttribute()]
    public class ArrayOfString : System.Collections.Generic.List<string> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SourceControlSettings", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class SourceControlSettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int PortField;
        
        private bool UseSSLField;
        
        private bool UseSSHField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerNameField;
        
        private CheckmarxTool.CxSDKWebService.RepositoryType RepositoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.Credentials UserCredentialsField;
        
        private CheckmarxTool.CxSDKWebService.SourceControlProtocolType ProtocolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RepositoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProtocolParametersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GITBranchField;
        
        private CheckmarxTool.CxSDKWebService.GitLsRemoteViewType GitLsViewTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SSHPublicKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SSHPrivateKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.GitHubIntegrationSettings GitHubSettingsField;
        
        private CheckmarxTool.CxSDKWebService.CxWSPerforceBrowsingMode PerforceBrowsingModeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Port {
            get {
                return this.PortField;
            }
            set {
                if ((this.PortField.Equals(value) != true)) {
                    this.PortField = value;
                    this.RaisePropertyChanged("Port");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool UseSSL {
            get {
                return this.UseSSLField;
            }
            set {
                if ((this.UseSSLField.Equals(value) != true)) {
                    this.UseSSLField = value;
                    this.RaisePropertyChanged("UseSSL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public bool UseSSH {
            get {
                return this.UseSSHField;
            }
            set {
                if ((this.UseSSHField.Equals(value) != true)) {
                    this.UseSSHField = value;
                    this.RaisePropertyChanged("UseSSH");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string ServerName {
            get {
                return this.ServerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerNameField, value) != true)) {
                    this.ServerNameField = value;
                    this.RaisePropertyChanged("ServerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public CheckmarxTool.CxSDKWebService.RepositoryType Repository {
            get {
                return this.RepositoryField;
            }
            set {
                if ((this.RepositoryField.Equals(value) != true)) {
                    this.RepositoryField = value;
                    this.RaisePropertyChanged("Repository");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public CheckmarxTool.CxSDKWebService.Credentials UserCredentials {
            get {
                return this.UserCredentialsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserCredentialsField, value) != true)) {
                    this.UserCredentialsField = value;
                    this.RaisePropertyChanged("UserCredentials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public CheckmarxTool.CxSDKWebService.SourceControlProtocolType Protocol {
            get {
                return this.ProtocolField;
            }
            set {
                if ((this.ProtocolField.Equals(value) != true)) {
                    this.ProtocolField = value;
                    this.RaisePropertyChanged("Protocol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string RepositoryName {
            get {
                return this.RepositoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RepositoryNameField, value) != true)) {
                    this.RepositoryNameField = value;
                    this.RaisePropertyChanged("RepositoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string ProtocolParameters {
            get {
                return this.ProtocolParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.ProtocolParametersField, value) != true)) {
                    this.ProtocolParametersField = value;
                    this.RaisePropertyChanged("ProtocolParameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public string GITBranch {
            get {
                return this.GITBranchField;
            }
            set {
                if ((object.ReferenceEquals(this.GITBranchField, value) != true)) {
                    this.GITBranchField = value;
                    this.RaisePropertyChanged("GITBranch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=10)]
        public CheckmarxTool.CxSDKWebService.GitLsRemoteViewType GitLsViewType {
            get {
                return this.GitLsViewTypeField;
            }
            set {
                if ((this.GitLsViewTypeField.Equals(value) != true)) {
                    this.GitLsViewTypeField = value;
                    this.RaisePropertyChanged("GitLsViewType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public string SSHPublicKey {
            get {
                return this.SSHPublicKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.SSHPublicKeyField, value) != true)) {
                    this.SSHPublicKeyField = value;
                    this.RaisePropertyChanged("SSHPublicKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public string SSHPrivateKey {
            get {
                return this.SSHPrivateKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.SSHPrivateKeyField, value) != true)) {
                    this.SSHPrivateKeyField = value;
                    this.RaisePropertyChanged("SSHPrivateKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public CheckmarxTool.CxSDKWebService.GitHubIntegrationSettings GitHubSettings {
            get {
                return this.GitHubSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.GitHubSettingsField, value) != true)) {
                    this.GitHubSettingsField = value;
                    this.RaisePropertyChanged("GitHubSettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=14)]
        public CheckmarxTool.CxSDKWebService.CxWSPerforceBrowsingMode PerforceBrowsingMode {
            get {
                return this.PerforceBrowsingModeField;
            }
            set {
                if ((this.PerforceBrowsingModeField.Equals(value) != true)) {
                    this.PerforceBrowsingModeField = value;
                    this.RaisePropertyChanged("PerforceBrowsingMode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocalCodeContainer", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class LocalCodeContainer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ZippedFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public byte[] ZippedFile {
            get {
                return this.ZippedFileField;
            }
            set {
                if ((object.ReferenceEquals(this.ZippedFileField, value) != true)) {
                    this.ZippedFileField = value;
                    this.RaisePropertyChanged("ZippedFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SourceFilterPatterns", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class SourceFilterPatterns : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExcludeFilesPatternsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExcludeFoldersPatternsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string ExcludeFilesPatterns {
            get {
                return this.ExcludeFilesPatternsField;
            }
            set {
                if ((object.ReferenceEquals(this.ExcludeFilesPatternsField, value) != true)) {
                    this.ExcludeFilesPatternsField = value;
                    this.RaisePropertyChanged("ExcludeFilesPatterns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string ExcludeFoldersPatterns {
            get {
                return this.ExcludeFoldersPatternsField;
            }
            set {
                if ((object.ReferenceEquals(this.ExcludeFoldersPatternsField, value) != true)) {
                    this.ExcludeFoldersPatternsField = value;
                    this.RaisePropertyChanged("ExcludeFoldersPatterns");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SourceLocationType", Namespace="http://Checkmarx.com/v7")]
    public enum SourceLocationType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Local = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Shared = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SourceControl = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SourcePulling = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScanPath", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class ScanPath : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        private bool IncludeSubTreeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public bool IncludeSubTree {
            get {
                return this.IncludeSubTreeField;
            }
            set {
                if ((this.IncludeSubTreeField.Equals(value) != true)) {
                    this.IncludeSubTreeField = value;
                    this.RaisePropertyChanged("IncludeSubTree");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GitHubIntegrationSettings", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class GitHubIntegrationSettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.Credentials ContributorCredentialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.Credentials OwnerCredentialsField;
        
        private int EventsThresholdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public CheckmarxTool.CxSDKWebService.Credentials ContributorCredentials {
            get {
                return this.ContributorCredentialsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContributorCredentialsField, value) != true)) {
                    this.ContributorCredentialsField = value;
                    this.RaisePropertyChanged("ContributorCredentials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public CheckmarxTool.CxSDKWebService.Credentials OwnerCredentials {
            get {
                return this.OwnerCredentialsField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerCredentialsField, value) != true)) {
                    this.OwnerCredentialsField = value;
                    this.RaisePropertyChanged("OwnerCredentials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public int EventsThreshold {
            get {
                return this.EventsThresholdField;
            }
            set {
                if ((this.EventsThresholdField.Equals(value) != true)) {
                    this.EventsThresholdField = value;
                    this.RaisePropertyChanged("EventsThreshold");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RepositoryType", Namespace="http://Checkmarx.com/v7")]
    public enum RepositoryType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TFS = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SVN = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CVS = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GIT = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Perforce = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NONE = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SourceControlProtocolType", Namespace="http://Checkmarx.com/v7")]
    public enum SourceControlProtocolType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WindowsAuthentication = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SSL = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SSH = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PasswordServer = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GitLsRemoteViewType", Namespace="http://Checkmarx.com/v7")]
    public enum GitLsRemoteViewType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TAGS = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HEADS = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TAGS_AND_HEADS = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ALL = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxWSPerforceBrowsingMode", Namespace="http://Checkmarx.com/v7")]
    public enum CxWSPerforceBrowsingMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Depot = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Workspace = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxWSBasicRepsonse", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSResponsePresetList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSResponseConfigSetList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSResponseProjectsDisplayData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSResponseProjectScannedDisplayData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSResponseProjectConfig))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSResponseSessionID))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSResponseLoginData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSResponseGroupList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSResponseScanStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSResponseScansDisplayData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSResponseScanSummary))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSResponseUserData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSCreateReportResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSReportStatusResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSResponseScanResults))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSResponseTeamLdapGroupMappingData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSResponseRunID))]
    public partial class CxWSBasicRepsonse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool IsSuccesfullField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsSuccesfull {
            get {
                return this.IsSuccesfullField;
            }
            set {
                if ((this.IsSuccesfullField.Equals(value) != true)) {
                    this.IsSuccesfullField = value;
                    this.RaisePropertyChanged("IsSuccesfull");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxWSResponsePresetList", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class CxWSResponsePresetList : CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.Preset[] PresetListField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public CheckmarxTool.CxSDKWebService.Preset[] PresetList {
            get {
                return this.PresetListField;
            }
            set {
                if ((object.ReferenceEquals(this.PresetListField, value) != true)) {
                    this.PresetListField = value;
                    this.RaisePropertyChanged("PresetList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxWSResponseConfigSetList", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class CxWSResponseConfigSetList : CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.ConfigurationSet[] ConfigSetListField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public CheckmarxTool.CxSDKWebService.ConfigurationSet[] ConfigSetList {
            get {
                return this.ConfigSetListField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigSetListField, value) != true)) {
                    this.ConfigSetListField = value;
                    this.RaisePropertyChanged("ConfigSetList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxWSResponseProjectsDisplayData", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class CxWSResponseProjectsDisplayData : CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.ProjectDisplayData[] projectListField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public CheckmarxTool.CxSDKWebService.ProjectDisplayData[] projectList {
            get {
                return this.projectListField;
            }
            set {
                if ((object.ReferenceEquals(this.projectListField, value) != true)) {
                    this.projectListField = value;
                    this.RaisePropertyChanged("projectList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxWSResponseProjectScannedDisplayData", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class CxWSResponseProjectScannedDisplayData : CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.ProjectScannedDisplayData[] ProjectScannedListField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public CheckmarxTool.CxSDKWebService.ProjectScannedDisplayData[] ProjectScannedList {
            get {
                return this.ProjectScannedListField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectScannedListField, value) != true)) {
                    this.ProjectScannedListField = value;
                    this.RaisePropertyChanged("ProjectScannedList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxWSResponseProjectConfig", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class CxWSResponseProjectConfig : CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.ProjectConfiguration ProjectConfigField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.UserPermission PermissionField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public CheckmarxTool.CxSDKWebService.ProjectConfiguration ProjectConfig {
            get {
                return this.ProjectConfigField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectConfigField, value) != true)) {
                    this.ProjectConfigField = value;
                    this.RaisePropertyChanged("ProjectConfig");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public CheckmarxTool.CxSDKWebService.UserPermission Permission {
            get {
                return this.PermissionField;
            }
            set {
                if ((object.ReferenceEquals(this.PermissionField, value) != true)) {
                    this.PermissionField = value;
                    this.RaisePropertyChanged("Permission");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxWSResponseSessionID", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSResponseLoginData))]
    public partial class CxWSResponseSessionID : CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string SessionId {
            get {
                return this.SessionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIdField, value) != true)) {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxWSResponseLoginData", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class CxWSResponseLoginData : CheckmarxTool.CxSDKWebService.CxWSResponseSessionID {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FamilyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        private long UserIDField;
        
        private int UserPreferedLanguageLCIDField;
        
        private bool IsAllowedToCreateProjectField;
        
        private bool IsAllowedToChangeProjectField;
        
        private bool IsAllowedToManageUsersField;
        
        private bool IsAllowedToViewCompaniesField;
        
        private bool IsAllowedToManageCompaniesField;
        
        private bool IsAllowedToManageServerField;
        
        private bool IsAllowedToViewInstallationDataField;
        
        private bool IsAllowedToViewSpField;
        
        private bool IsAllowedToManageSpField;
        
        private bool IsScannerField;
        
        private bool IsAuditorField;
        
        private bool IsAllowedToManagePresetsField;
        
        private bool isAllowedToManagePredefinedCommandField;
        
        private bool IsAllowedToManagePostScanActionField;
        
        private bool IsAllowedToModifyResultDetailsField;
        
        private bool EnableIncrementalScanField;
        
        private bool ShowSaaSPackageNotificationAndErrorsField;
        
        private bool ShowSaaSPackageDetailsField;
        
        private bool IsAdviseChangePasswordField;
        
        private bool IsAllowedToManageITSServersField;
        
        private bool AllowedToChangeNotExploitableField;
        
        private bool IsAllowedToDeleteScansField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string FamilyName {
            get {
                return this.FamilyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FamilyNameField, value) != true)) {
                    this.FamilyNameField = value;
                    this.RaisePropertyChanged("FamilyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public long UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public int UserPreferedLanguageLCID {
            get {
                return this.UserPreferedLanguageLCIDField;
            }
            set {
                if ((this.UserPreferedLanguageLCIDField.Equals(value) != true)) {
                    this.UserPreferedLanguageLCIDField = value;
                    this.RaisePropertyChanged("UserPreferedLanguageLCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public bool IsAllowedToCreateProject {
            get {
                return this.IsAllowedToCreateProjectField;
            }
            set {
                if ((this.IsAllowedToCreateProjectField.Equals(value) != true)) {
                    this.IsAllowedToCreateProjectField = value;
                    this.RaisePropertyChanged("IsAllowedToCreateProject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public bool IsAllowedToChangeProject {
            get {
                return this.IsAllowedToChangeProjectField;
            }
            set {
                if ((this.IsAllowedToChangeProjectField.Equals(value) != true)) {
                    this.IsAllowedToChangeProjectField = value;
                    this.RaisePropertyChanged("IsAllowedToChangeProject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public bool IsAllowedToManageUsers {
            get {
                return this.IsAllowedToManageUsersField;
            }
            set {
                if ((this.IsAllowedToManageUsersField.Equals(value) != true)) {
                    this.IsAllowedToManageUsersField = value;
                    this.RaisePropertyChanged("IsAllowedToManageUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=9)]
        public bool IsAllowedToViewCompanies {
            get {
                return this.IsAllowedToViewCompaniesField;
            }
            set {
                if ((this.IsAllowedToViewCompaniesField.Equals(value) != true)) {
                    this.IsAllowedToViewCompaniesField = value;
                    this.RaisePropertyChanged("IsAllowedToViewCompanies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=10)]
        public bool IsAllowedToManageCompanies {
            get {
                return this.IsAllowedToManageCompaniesField;
            }
            set {
                if ((this.IsAllowedToManageCompaniesField.Equals(value) != true)) {
                    this.IsAllowedToManageCompaniesField = value;
                    this.RaisePropertyChanged("IsAllowedToManageCompanies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=11)]
        public bool IsAllowedToManageServer {
            get {
                return this.IsAllowedToManageServerField;
            }
            set {
                if ((this.IsAllowedToManageServerField.Equals(value) != true)) {
                    this.IsAllowedToManageServerField = value;
                    this.RaisePropertyChanged("IsAllowedToManageServer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=12)]
        public bool IsAllowedToViewInstallationData {
            get {
                return this.IsAllowedToViewInstallationDataField;
            }
            set {
                if ((this.IsAllowedToViewInstallationDataField.Equals(value) != true)) {
                    this.IsAllowedToViewInstallationDataField = value;
                    this.RaisePropertyChanged("IsAllowedToViewInstallationData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=13)]
        public bool IsAllowedToViewSp {
            get {
                return this.IsAllowedToViewSpField;
            }
            set {
                if ((this.IsAllowedToViewSpField.Equals(value) != true)) {
                    this.IsAllowedToViewSpField = value;
                    this.RaisePropertyChanged("IsAllowedToViewSp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=14)]
        public bool IsAllowedToManageSp {
            get {
                return this.IsAllowedToManageSpField;
            }
            set {
                if ((this.IsAllowedToManageSpField.Equals(value) != true)) {
                    this.IsAllowedToManageSpField = value;
                    this.RaisePropertyChanged("IsAllowedToManageSp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=15)]
        public bool IsScanner {
            get {
                return this.IsScannerField;
            }
            set {
                if ((this.IsScannerField.Equals(value) != true)) {
                    this.IsScannerField = value;
                    this.RaisePropertyChanged("IsScanner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=16)]
        public bool IsAuditor {
            get {
                return this.IsAuditorField;
            }
            set {
                if ((this.IsAuditorField.Equals(value) != true)) {
                    this.IsAuditorField = value;
                    this.RaisePropertyChanged("IsAuditor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=17)]
        public bool IsAllowedToManagePresets {
            get {
                return this.IsAllowedToManagePresetsField;
            }
            set {
                if ((this.IsAllowedToManagePresetsField.Equals(value) != true)) {
                    this.IsAllowedToManagePresetsField = value;
                    this.RaisePropertyChanged("IsAllowedToManagePresets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=18)]
        public bool isAllowedToManagePredefinedCommand {
            get {
                return this.isAllowedToManagePredefinedCommandField;
            }
            set {
                if ((this.isAllowedToManagePredefinedCommandField.Equals(value) != true)) {
                    this.isAllowedToManagePredefinedCommandField = value;
                    this.RaisePropertyChanged("isAllowedToManagePredefinedCommand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=19)]
        public bool IsAllowedToManagePostScanAction {
            get {
                return this.IsAllowedToManagePostScanActionField;
            }
            set {
                if ((this.IsAllowedToManagePostScanActionField.Equals(value) != true)) {
                    this.IsAllowedToManagePostScanActionField = value;
                    this.RaisePropertyChanged("IsAllowedToManagePostScanAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=20)]
        public bool IsAllowedToModifyResultDetails {
            get {
                return this.IsAllowedToModifyResultDetailsField;
            }
            set {
                if ((this.IsAllowedToModifyResultDetailsField.Equals(value) != true)) {
                    this.IsAllowedToModifyResultDetailsField = value;
                    this.RaisePropertyChanged("IsAllowedToModifyResultDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=21)]
        public bool EnableIncrementalScan {
            get {
                return this.EnableIncrementalScanField;
            }
            set {
                if ((this.EnableIncrementalScanField.Equals(value) != true)) {
                    this.EnableIncrementalScanField = value;
                    this.RaisePropertyChanged("EnableIncrementalScan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=22)]
        public bool ShowSaaSPackageNotificationAndErrors {
            get {
                return this.ShowSaaSPackageNotificationAndErrorsField;
            }
            set {
                if ((this.ShowSaaSPackageNotificationAndErrorsField.Equals(value) != true)) {
                    this.ShowSaaSPackageNotificationAndErrorsField = value;
                    this.RaisePropertyChanged("ShowSaaSPackageNotificationAndErrors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=23)]
        public bool ShowSaaSPackageDetails {
            get {
                return this.ShowSaaSPackageDetailsField;
            }
            set {
                if ((this.ShowSaaSPackageDetailsField.Equals(value) != true)) {
                    this.ShowSaaSPackageDetailsField = value;
                    this.RaisePropertyChanged("ShowSaaSPackageDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=24)]
        public bool IsAdviseChangePassword {
            get {
                return this.IsAdviseChangePasswordField;
            }
            set {
                if ((this.IsAdviseChangePasswordField.Equals(value) != true)) {
                    this.IsAdviseChangePasswordField = value;
                    this.RaisePropertyChanged("IsAdviseChangePassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=25)]
        public bool IsAllowedToManageITSServers {
            get {
                return this.IsAllowedToManageITSServersField;
            }
            set {
                if ((this.IsAllowedToManageITSServersField.Equals(value) != true)) {
                    this.IsAllowedToManageITSServersField = value;
                    this.RaisePropertyChanged("IsAllowedToManageITSServers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=26)]
        public bool AllowedToChangeNotExploitable {
            get {
                return this.AllowedToChangeNotExploitableField;
            }
            set {
                if ((this.AllowedToChangeNotExploitableField.Equals(value) != true)) {
                    this.AllowedToChangeNotExploitableField = value;
                    this.RaisePropertyChanged("AllowedToChangeNotExploitable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=27)]
        public bool IsAllowedToDeleteScans {
            get {
                return this.IsAllowedToDeleteScansField;
            }
            set {
                if ((this.IsAllowedToDeleteScansField.Equals(value) != true)) {
                    this.IsAllowedToDeleteScansField = value;
                    this.RaisePropertyChanged("IsAllowedToDeleteScans");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxWSResponseGroupList", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class CxWSResponseGroupList : CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.Group[] GroupListField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public CheckmarxTool.CxSDKWebService.Group[] GroupList {
            get {
                return this.GroupListField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupListField, value) != true)) {
                    this.GroupListField = value;
                    this.RaisePropertyChanged("GroupList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxWSResponseScanStatus", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class CxWSResponseScanStatus : CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse {
        
        private int CurrentStageField;
        
        private int QueuePositionField;
        
        private int TotalPercentField;
        
        private int CurrentStagePercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StageNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StageMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StepMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StepDetailsField;
        
        private long ResultIdField;
        
        private long ScanIdField;
        
        private long ProjectIdField;
        
        private long TaskIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RunIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceIdField;
        
        private long LOCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.CxDateTime TimeScheduledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.CxDateTime ElapsedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.CxDateTime TimeFinishedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.CxDateTime TimeBeginWorkingField;
        
        private CheckmarxTool.CxSDKWebService.CurrentStatusEnum CurrentStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginField;
        
        private bool IsPublicField;
        
        private bool PartialResultsField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int CurrentStage {
            get {
                return this.CurrentStageField;
            }
            set {
                if ((this.CurrentStageField.Equals(value) != true)) {
                    this.CurrentStageField = value;
                    this.RaisePropertyChanged("CurrentStage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int QueuePosition {
            get {
                return this.QueuePositionField;
            }
            set {
                if ((this.QueuePositionField.Equals(value) != true)) {
                    this.QueuePositionField = value;
                    this.RaisePropertyChanged("QueuePosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int TotalPercent {
            get {
                return this.TotalPercentField;
            }
            set {
                if ((this.TotalPercentField.Equals(value) != true)) {
                    this.TotalPercentField = value;
                    this.RaisePropertyChanged("TotalPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int CurrentStagePercent {
            get {
                return this.CurrentStagePercentField;
            }
            set {
                if ((this.CurrentStagePercentField.Equals(value) != true)) {
                    this.CurrentStagePercentField = value;
                    this.RaisePropertyChanged("CurrentStagePercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string StageName {
            get {
                return this.StageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StageNameField, value) != true)) {
                    this.StageNameField = value;
                    this.RaisePropertyChanged("StageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string StageMessage {
            get {
                return this.StageMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.StageMessageField, value) != true)) {
                    this.StageMessageField = value;
                    this.RaisePropertyChanged("StageMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string StepMessage {
            get {
                return this.StepMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.StepMessageField, value) != true)) {
                    this.StepMessageField = value;
                    this.RaisePropertyChanged("StepMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string StepDetails {
            get {
                return this.StepDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.StepDetailsField, value) != true)) {
                    this.StepDetailsField = value;
                    this.RaisePropertyChanged("StepDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=9)]
        public long ResultId {
            get {
                return this.ResultIdField;
            }
            set {
                if ((this.ResultIdField.Equals(value) != true)) {
                    this.ResultIdField = value;
                    this.RaisePropertyChanged("ResultId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=10)]
        public long ScanId {
            get {
                return this.ScanIdField;
            }
            set {
                if ((this.ScanIdField.Equals(value) != true)) {
                    this.ScanIdField = value;
                    this.RaisePropertyChanged("ScanId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=11)]
        public long ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=12)]
        public long TaskId {
            get {
                return this.TaskIdField;
            }
            set {
                if ((this.TaskIdField.Equals(value) != true)) {
                    this.TaskIdField = value;
                    this.RaisePropertyChanged("TaskId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public string TaskName {
            get {
                return this.TaskNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskNameField, value) != true)) {
                    this.TaskNameField = value;
                    this.RaisePropertyChanged("TaskName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=14)]
        public string ProjectName {
            get {
                return this.ProjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNameField, value) != true)) {
                    this.ProjectNameField = value;
                    this.RaisePropertyChanged("ProjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=15)]
        public string RunId {
            get {
                return this.RunIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RunIdField, value) != true)) {
                    this.RunIdField = value;
                    this.RaisePropertyChanged("RunId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=16)]
        public string SourceId {
            get {
                return this.SourceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceIdField, value) != true)) {
                    this.SourceIdField = value;
                    this.RaisePropertyChanged("SourceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=17)]
        public long LOC {
            get {
                return this.LOCField;
            }
            set {
                if ((this.LOCField.Equals(value) != true)) {
                    this.LOCField = value;
                    this.RaisePropertyChanged("LOC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=18)]
        public CheckmarxTool.CxSDKWebService.CxDateTime TimeScheduled {
            get {
                return this.TimeScheduledField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeScheduledField, value) != true)) {
                    this.TimeScheduledField = value;
                    this.RaisePropertyChanged("TimeScheduled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=19)]
        public CheckmarxTool.CxSDKWebService.CxDateTime ElapsedTime {
            get {
                return this.ElapsedTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.ElapsedTimeField, value) != true)) {
                    this.ElapsedTimeField = value;
                    this.RaisePropertyChanged("ElapsedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=20)]
        public CheckmarxTool.CxSDKWebService.CxDateTime TimeFinished {
            get {
                return this.TimeFinishedField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeFinishedField, value) != true)) {
                    this.TimeFinishedField = value;
                    this.RaisePropertyChanged("TimeFinished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=21)]
        public CheckmarxTool.CxSDKWebService.CxDateTime TimeBeginWorking {
            get {
                return this.TimeBeginWorkingField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeBeginWorkingField, value) != true)) {
                    this.TimeBeginWorkingField = value;
                    this.RaisePropertyChanged("TimeBeginWorking");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=22)]
        public CheckmarxTool.CxSDKWebService.CurrentStatusEnum CurrentStatus {
            get {
                return this.CurrentStatusField;
            }
            set {
                if ((this.CurrentStatusField.Equals(value) != true)) {
                    this.CurrentStatusField = value;
                    this.RaisePropertyChanged("CurrentStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=23)]
        public string ServerName {
            get {
                return this.ServerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerNameField, value) != true)) {
                    this.ServerNameField = value;
                    this.RaisePropertyChanged("ServerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=24)]
        public string Origin {
            get {
                return this.OriginField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginField, value) != true)) {
                    this.OriginField = value;
                    this.RaisePropertyChanged("Origin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=25)]
        public bool IsPublic {
            get {
                return this.IsPublicField;
            }
            set {
                if ((this.IsPublicField.Equals(value) != true)) {
                    this.IsPublicField = value;
                    this.RaisePropertyChanged("IsPublic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=26)]
        public bool PartialResults {
            get {
                return this.PartialResultsField;
            }
            set {
                if ((this.PartialResultsField.Equals(value) != true)) {
                    this.PartialResultsField = value;
                    this.RaisePropertyChanged("PartialResults");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxWSResponseScansDisplayData", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class CxWSResponseScansDisplayData : CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.ScanDisplayData[] ScanListField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public CheckmarxTool.CxSDKWebService.ScanDisplayData[] ScanList {
            get {
                return this.ScanListField;
            }
            set {
                if ((object.ReferenceEquals(this.ScanListField, value) != true)) {
                    this.ScanListField = value;
                    this.RaisePropertyChanged("ScanList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxWSResponseScanSummary", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class CxWSResponseScanSummary : CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.CxDateTime StartedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.CxDateTime FinishedField;
        
        private int ScanRiskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PresetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        private long LOCField;
        
        private long FilesCountField;
        
        private int HighField;
        
        private int MediumField;
        
        private int LowField;
        
        private int InfoField;
        
        private int ScanRiskSeverityField;
        
        private int ScanRiskQuantityField;
        
        private bool IsIncrementalField;
        
        private CheckmarxTool.CxSDKWebService.ScanType ScanTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.CxWSQueryLanguageState[] ScanLanguageStateCollectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.CxDateTime EngineStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.CxDateTime EngineFinishField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.CxDateTime ScanQueuedField;
        
        private long TotalScanTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.CxDateTime StatisticsCalculationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TeamNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public CheckmarxTool.CxSDKWebService.CxDateTime Started {
            get {
                return this.StartedField;
            }
            set {
                if ((object.ReferenceEquals(this.StartedField, value) != true)) {
                    this.StartedField = value;
                    this.RaisePropertyChanged("Started");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public CheckmarxTool.CxSDKWebService.CxDateTime Finished {
            get {
                return this.FinishedField;
            }
            set {
                if ((object.ReferenceEquals(this.FinishedField, value) != true)) {
                    this.FinishedField = value;
                    this.RaisePropertyChanged("Finished");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public int ScanRisk {
            get {
                return this.ScanRiskField;
            }
            set {
                if ((this.ScanRiskField.Equals(value) != true)) {
                    this.ScanRiskField = value;
                    this.RaisePropertyChanged("ScanRisk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Preset {
            get {
                return this.PresetField;
            }
            set {
                if ((object.ReferenceEquals(this.PresetField, value) != true)) {
                    this.PresetField = value;
                    this.RaisePropertyChanged("Preset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public long LOC {
            get {
                return this.LOCField;
            }
            set {
                if ((this.LOCField.Equals(value) != true)) {
                    this.LOCField = value;
                    this.RaisePropertyChanged("LOC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public long FilesCount {
            get {
                return this.FilesCountField;
            }
            set {
                if ((this.FilesCountField.Equals(value) != true)) {
                    this.FilesCountField = value;
                    this.RaisePropertyChanged("FilesCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public int High {
            get {
                return this.HighField;
            }
            set {
                if ((this.HighField.Equals(value) != true)) {
                    this.HighField = value;
                    this.RaisePropertyChanged("High");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=9)]
        public int Medium {
            get {
                return this.MediumField;
            }
            set {
                if ((this.MediumField.Equals(value) != true)) {
                    this.MediumField = value;
                    this.RaisePropertyChanged("Medium");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=10)]
        public int Low {
            get {
                return this.LowField;
            }
            set {
                if ((this.LowField.Equals(value) != true)) {
                    this.LowField = value;
                    this.RaisePropertyChanged("Low");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=11)]
        public int Info {
            get {
                return this.InfoField;
            }
            set {
                if ((this.InfoField.Equals(value) != true)) {
                    this.InfoField = value;
                    this.RaisePropertyChanged("Info");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=12)]
        public int ScanRiskSeverity {
            get {
                return this.ScanRiskSeverityField;
            }
            set {
                if ((this.ScanRiskSeverityField.Equals(value) != true)) {
                    this.ScanRiskSeverityField = value;
                    this.RaisePropertyChanged("ScanRiskSeverity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=13)]
        public int ScanRiskQuantity {
            get {
                return this.ScanRiskQuantityField;
            }
            set {
                if ((this.ScanRiskQuantityField.Equals(value) != true)) {
                    this.ScanRiskQuantityField = value;
                    this.RaisePropertyChanged("ScanRiskQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=14)]
        public bool IsIncremental {
            get {
                return this.IsIncrementalField;
            }
            set {
                if ((this.IsIncrementalField.Equals(value) != true)) {
                    this.IsIncrementalField = value;
                    this.RaisePropertyChanged("IsIncremental");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=15)]
        public CheckmarxTool.CxSDKWebService.ScanType ScanType {
            get {
                return this.ScanTypeField;
            }
            set {
                if ((this.ScanTypeField.Equals(value) != true)) {
                    this.ScanTypeField = value;
                    this.RaisePropertyChanged("ScanType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=16)]
        public CheckmarxTool.CxSDKWebService.CxWSQueryLanguageState[] ScanLanguageStateCollection {
            get {
                return this.ScanLanguageStateCollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.ScanLanguageStateCollectionField, value) != true)) {
                    this.ScanLanguageStateCollectionField = value;
                    this.RaisePropertyChanged("ScanLanguageStateCollection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=17)]
        public CheckmarxTool.CxSDKWebService.CxDateTime EngineStart {
            get {
                return this.EngineStartField;
            }
            set {
                if ((object.ReferenceEquals(this.EngineStartField, value) != true)) {
                    this.EngineStartField = value;
                    this.RaisePropertyChanged("EngineStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=18)]
        public CheckmarxTool.CxSDKWebService.CxDateTime EngineFinish {
            get {
                return this.EngineFinishField;
            }
            set {
                if ((object.ReferenceEquals(this.EngineFinishField, value) != true)) {
                    this.EngineFinishField = value;
                    this.RaisePropertyChanged("EngineFinish");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=19)]
        public CheckmarxTool.CxSDKWebService.CxDateTime ScanQueued {
            get {
                return this.ScanQueuedField;
            }
            set {
                if ((object.ReferenceEquals(this.ScanQueuedField, value) != true)) {
                    this.ScanQueuedField = value;
                    this.RaisePropertyChanged("ScanQueued");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=20)]
        public long TotalScanTime {
            get {
                return this.TotalScanTimeField;
            }
            set {
                if ((this.TotalScanTimeField.Equals(value) != true)) {
                    this.TotalScanTimeField = value;
                    this.RaisePropertyChanged("TotalScanTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=21)]
        public CheckmarxTool.CxSDKWebService.CxDateTime StatisticsCalculationDate {
            get {
                return this.StatisticsCalculationDateField;
            }
            set {
                if ((object.ReferenceEquals(this.StatisticsCalculationDateField, value) != true)) {
                    this.StatisticsCalculationDateField = value;
                    this.RaisePropertyChanged("StatisticsCalculationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=22)]
        public string ProjectName {
            get {
                return this.ProjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNameField, value) != true)) {
                    this.ProjectNameField = value;
                    this.RaisePropertyChanged("ProjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=23)]
        public string TeamName {
            get {
                return this.TeamNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamNameField, value) != true)) {
                    this.TeamNameField = value;
                    this.RaisePropertyChanged("TeamName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxWSResponseUserData", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class CxWSResponseUserData : CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.UserData[] UserDataListField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public CheckmarxTool.CxSDKWebService.UserData[] UserDataList {
            get {
                return this.UserDataListField;
            }
            set {
                if ((object.ReferenceEquals(this.UserDataListField, value) != true)) {
                    this.UserDataListField = value;
                    this.RaisePropertyChanged("UserDataList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxWSCreateReportResponse", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class CxWSCreateReportResponse : CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse {
        
        private long IDField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxWSReportStatusResponse", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class CxWSReportStatusResponse : CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse {
        
        private bool IsReadyField;
        
        private bool IsFailedField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsReady {
            get {
                return this.IsReadyField;
            }
            set {
                if ((this.IsReadyField.Equals(value) != true)) {
                    this.IsReadyField = value;
                    this.RaisePropertyChanged("IsReady");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public bool IsFailed {
            get {
                return this.IsFailedField;
            }
            set {
                if ((this.IsFailedField.Equals(value) != true)) {
                    this.IsFailedField = value;
                    this.RaisePropertyChanged("IsFailed");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxWSResponseScanResults", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class CxWSResponseScanResults : CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ScanResultsField;
        
        private bool containsAllResultsField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public byte[] ScanResults {
            get {
                return this.ScanResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.ScanResultsField, value) != true)) {
                    this.ScanResultsField = value;
                    this.RaisePropertyChanged("ScanResults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool containsAllResults {
            get {
                return this.containsAllResultsField;
            }
            set {
                if ((this.containsAllResultsField.Equals(value) != true)) {
                    this.containsAllResultsField = value;
                    this.RaisePropertyChanged("containsAllResults");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxWSResponseTeamLdapGroupMappingData", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class CxWSResponseTeamLdapGroupMappingData : CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TeamIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.CxWSLdapGroupMapping[] LdapGroupsField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string TeamId {
            get {
                return this.TeamIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamIdField, value) != true)) {
                    this.TeamIdField = value;
                    this.RaisePropertyChanged("TeamId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public CheckmarxTool.CxSDKWebService.CxWSLdapGroupMapping[] LdapGroups {
            get {
                return this.LdapGroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.LdapGroupsField, value) != true)) {
                    this.LdapGroupsField = value;
                    this.RaisePropertyChanged("LdapGroups");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxWSResponseRunID", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class CxWSResponseRunID : CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse {
        
        private long ProjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RunIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long ProjectID {
            get {
                return this.ProjectIDField;
            }
            set {
                if ((this.ProjectIDField.Equals(value) != true)) {
                    this.ProjectIDField = value;
                    this.RaisePropertyChanged("ProjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string RunId {
            get {
                return this.RunIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RunIdField, value) != true)) {
                    this.RunIdField = value;
                    this.RaisePropertyChanged("RunId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Preset", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class Preset : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PresetNameField;
        
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string owningUserField;
        
        private bool isUserAllowToUpdateField;
        
        private bool isUserAllowToDeleteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string PresetName {
            get {
                return this.PresetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PresetNameField, value) != true)) {
                    this.PresetNameField = value;
                    this.RaisePropertyChanged("PresetName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string owningUser {
            get {
                return this.owningUserField;
            }
            set {
                if ((object.ReferenceEquals(this.owningUserField, value) != true)) {
                    this.owningUserField = value;
                    this.RaisePropertyChanged("owningUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public bool isUserAllowToUpdate {
            get {
                return this.isUserAllowToUpdateField;
            }
            set {
                if ((this.isUserAllowToUpdateField.Equals(value) != true)) {
                    this.isUserAllowToUpdateField = value;
                    this.RaisePropertyChanged("isUserAllowToUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public bool isUserAllowToDelete {
            get {
                return this.isUserAllowToDeleteField;
            }
            set {
                if ((this.isUserAllowToDeleteField.Equals(value) != true)) {
                    this.isUserAllowToDeleteField = value;
                    this.RaisePropertyChanged("isUserAllowToDelete");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConfigurationSet", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class ConfigurationSet : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigSetNameField;
        
        private long IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string ConfigSetName {
            get {
                return this.ConfigSetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigSetNameField, value) != true)) {
                    this.ConfigSetNameField = value;
                    this.RaisePropertyChanged("ConfigSetName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProjectDisplayData", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class ProjectDisplayData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.UserPermission PermissionField;
        
        private long projectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceProviderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PresetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.CxDateTime LastScanDateField;
        
        private int TotalScansField;
        
        private bool IsPublicField;
        
        private int TotalOsaScansField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public CheckmarxTool.CxSDKWebService.UserPermission Permission {
            get {
                return this.PermissionField;
            }
            set {
                if ((object.ReferenceEquals(this.PermissionField, value) != true)) {
                    this.PermissionField = value;
                    this.RaisePropertyChanged("Permission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long projectID {
            get {
                return this.projectIDField;
            }
            set {
                if ((this.projectIDField.Equals(value) != true)) {
                    this.projectIDField = value;
                    this.RaisePropertyChanged("projectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string ServiceProvider {
            get {
                return this.ServiceProviderField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceProviderField, value) != true)) {
                    this.ServiceProviderField = value;
                    this.RaisePropertyChanged("ServiceProvider");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string ProjectName {
            get {
                return this.ProjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNameField, value) != true)) {
                    this.ProjectNameField = value;
                    this.RaisePropertyChanged("ProjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string Group {
            get {
                return this.GroupField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupField, value) != true)) {
                    this.GroupField = value;
                    this.RaisePropertyChanged("Group");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string Preset {
            get {
                return this.PresetField;
            }
            set {
                if ((object.ReferenceEquals(this.PresetField, value) != true)) {
                    this.PresetField = value;
                    this.RaisePropertyChanged("Preset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public CheckmarxTool.CxSDKWebService.CxDateTime LastScanDate {
            get {
                return this.LastScanDateField;
            }
            set {
                if ((object.ReferenceEquals(this.LastScanDateField, value) != true)) {
                    this.LastScanDateField = value;
                    this.RaisePropertyChanged("LastScanDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=9)]
        public int TotalScans {
            get {
                return this.TotalScansField;
            }
            set {
                if ((this.TotalScansField.Equals(value) != true)) {
                    this.TotalScansField = value;
                    this.RaisePropertyChanged("TotalScans");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=10)]
        public bool IsPublic {
            get {
                return this.IsPublicField;
            }
            set {
                if ((this.IsPublicField.Equals(value) != true)) {
                    this.IsPublicField = value;
                    this.RaisePropertyChanged("IsPublic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=11)]
        public int TotalOsaScans {
            get {
                return this.TotalOsaScansField;
            }
            set {
                if ((this.TotalOsaScansField.Equals(value) != true)) {
                    this.TotalOsaScansField = value;
                    this.RaisePropertyChanged("TotalOsaScans");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserPermission", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class UserPermission : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool IsAllowedToDeleteField;
        
        private bool IsAllowedToDuplicateField;
        
        private bool IsAllowedToRunField;
        
        private bool IsAllowedToUpdateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsAllowedToDelete {
            get {
                return this.IsAllowedToDeleteField;
            }
            set {
                if ((this.IsAllowedToDeleteField.Equals(value) != true)) {
                    this.IsAllowedToDeleteField = value;
                    this.RaisePropertyChanged("IsAllowedToDelete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsAllowedToDuplicate {
            get {
                return this.IsAllowedToDuplicateField;
            }
            set {
                if ((this.IsAllowedToDuplicateField.Equals(value) != true)) {
                    this.IsAllowedToDuplicateField = value;
                    this.RaisePropertyChanged("IsAllowedToDuplicate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsAllowedToRun {
            get {
                return this.IsAllowedToRunField;
            }
            set {
                if ((this.IsAllowedToRunField.Equals(value) != true)) {
                    this.IsAllowedToRunField = value;
                    this.RaisePropertyChanged("IsAllowedToRun");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsAllowedToUpdate {
            get {
                return this.IsAllowedToUpdateField;
            }
            set {
                if ((this.IsAllowedToUpdateField.Equals(value) != true)) {
                    this.IsAllowedToUpdateField = value;
                    this.RaisePropertyChanged("IsAllowedToUpdate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxDateTime", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class CxDateTime : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int HourField;
        
        private int MinuteField;
        
        private int SecondField;
        
        private int DayField;
        
        private int MonthField;
        
        private int YearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Hour {
            get {
                return this.HourField;
            }
            set {
                if ((this.HourField.Equals(value) != true)) {
                    this.HourField = value;
                    this.RaisePropertyChanged("Hour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Minute {
            get {
                return this.MinuteField;
            }
            set {
                if ((this.MinuteField.Equals(value) != true)) {
                    this.MinuteField = value;
                    this.RaisePropertyChanged("Minute");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int Second {
            get {
                return this.SecondField;
            }
            set {
                if ((this.SecondField.Equals(value) != true)) {
                    this.SecondField = value;
                    this.RaisePropertyChanged("Second");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int Day {
            get {
                return this.DayField;
            }
            set {
                if ((this.DayField.Equals(value) != true)) {
                    this.DayField = value;
                    this.RaisePropertyChanged("Day");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public int Month {
            get {
                return this.MonthField;
            }
            set {
                if ((this.MonthField.Equals(value) != true)) {
                    this.MonthField = value;
                    this.RaisePropertyChanged("Month");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProjectScannedDisplayData", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class ProjectScannedDisplayData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long ProjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectNameField;
        
        private long LastScanIDField;
        
        private long LastScanDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TeamNameField;
        
        private int RiskLevelScoreField;
        
        private long LOCField;
        
        private int HighVulnerabilitiesField;
        
        private int MediumVulnerabilitiesField;
        
        private int LowVulnerabilitiesField;
        
        private int InfoVulnerabilitiesField;
        
        private int TotalVulnerabilitiesField;
        
        private long QueueTimeField;
        
        private long ScanTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailedLOCField;
        
        private long StatisticsCalculationDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long ProjectID {
            get {
                return this.ProjectIDField;
            }
            set {
                if ((this.ProjectIDField.Equals(value) != true)) {
                    this.ProjectIDField = value;
                    this.RaisePropertyChanged("ProjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string ProjectName {
            get {
                return this.ProjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNameField, value) != true)) {
                    this.ProjectNameField = value;
                    this.RaisePropertyChanged("ProjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public long LastScanID {
            get {
                return this.LastScanIDField;
            }
            set {
                if ((this.LastScanIDField.Equals(value) != true)) {
                    this.LastScanIDField = value;
                    this.RaisePropertyChanged("LastScanID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public long LastScanDate {
            get {
                return this.LastScanDateField;
            }
            set {
                if ((this.LastScanDateField.Equals(value) != true)) {
                    this.LastScanDateField = value;
                    this.RaisePropertyChanged("LastScanDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string TeamName {
            get {
                return this.TeamNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamNameField, value) != true)) {
                    this.TeamNameField = value;
                    this.RaisePropertyChanged("TeamName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public int RiskLevelScore {
            get {
                return this.RiskLevelScoreField;
            }
            set {
                if ((this.RiskLevelScoreField.Equals(value) != true)) {
                    this.RiskLevelScoreField = value;
                    this.RaisePropertyChanged("RiskLevelScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public long LOC {
            get {
                return this.LOCField;
            }
            set {
                if ((this.LOCField.Equals(value) != true)) {
                    this.LOCField = value;
                    this.RaisePropertyChanged("LOC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public int HighVulnerabilities {
            get {
                return this.HighVulnerabilitiesField;
            }
            set {
                if ((this.HighVulnerabilitiesField.Equals(value) != true)) {
                    this.HighVulnerabilitiesField = value;
                    this.RaisePropertyChanged("HighVulnerabilities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public int MediumVulnerabilities {
            get {
                return this.MediumVulnerabilitiesField;
            }
            set {
                if ((this.MediumVulnerabilitiesField.Equals(value) != true)) {
                    this.MediumVulnerabilitiesField = value;
                    this.RaisePropertyChanged("MediumVulnerabilities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=9)]
        public int LowVulnerabilities {
            get {
                return this.LowVulnerabilitiesField;
            }
            set {
                if ((this.LowVulnerabilitiesField.Equals(value) != true)) {
                    this.LowVulnerabilitiesField = value;
                    this.RaisePropertyChanged("LowVulnerabilities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=10)]
        public int InfoVulnerabilities {
            get {
                return this.InfoVulnerabilitiesField;
            }
            set {
                if ((this.InfoVulnerabilitiesField.Equals(value) != true)) {
                    this.InfoVulnerabilitiesField = value;
                    this.RaisePropertyChanged("InfoVulnerabilities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=11)]
        public int TotalVulnerabilities {
            get {
                return this.TotalVulnerabilitiesField;
            }
            set {
                if ((this.TotalVulnerabilitiesField.Equals(value) != true)) {
                    this.TotalVulnerabilitiesField = value;
                    this.RaisePropertyChanged("TotalVulnerabilities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=12)]
        public long QueueTime {
            get {
                return this.QueueTimeField;
            }
            set {
                if ((this.QueueTimeField.Equals(value) != true)) {
                    this.QueueTimeField = value;
                    this.RaisePropertyChanged("QueueTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=13)]
        public long ScanTime {
            get {
                return this.ScanTimeField;
            }
            set {
                if ((this.ScanTimeField.Equals(value) != true)) {
                    this.ScanTimeField = value;
                    this.RaisePropertyChanged("ScanTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=14)]
        public string FailedLOC {
            get {
                return this.FailedLOCField;
            }
            set {
                if ((object.ReferenceEquals(this.FailedLOCField, value) != true)) {
                    this.FailedLOCField = value;
                    this.RaisePropertyChanged("FailedLOC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=15)]
        public long StatisticsCalculationDate {
            get {
                return this.StatisticsCalculationDateField;
            }
            set {
                if ((this.StatisticsCalculationDateField.Equals(value) != true)) {
                    this.StatisticsCalculationDateField = value;
                    this.RaisePropertyChanged("StatisticsCalculationDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProjectConfiguration", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class ProjectConfiguration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.ProjectSettings ProjectSettingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.SourceCodeSettings SourceCodeSettingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.ScheduleSettings ScheduleSettingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.ScanActionSettings ScanActionSettingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.CxWSProjectIssueTrackingSettings ProjectIssueTrackingSettingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.CxWSProjectCustomField[] CustomFieldsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.DataRetentionSettings DataRetentionSettingsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public CheckmarxTool.CxSDKWebService.ProjectSettings ProjectSettings {
            get {
                return this.ProjectSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectSettingsField, value) != true)) {
                    this.ProjectSettingsField = value;
                    this.RaisePropertyChanged("ProjectSettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public CheckmarxTool.CxSDKWebService.SourceCodeSettings SourceCodeSettings {
            get {
                return this.SourceCodeSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceCodeSettingsField, value) != true)) {
                    this.SourceCodeSettingsField = value;
                    this.RaisePropertyChanged("SourceCodeSettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public CheckmarxTool.CxSDKWebService.ScheduleSettings ScheduleSettings {
            get {
                return this.ScheduleSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduleSettingsField, value) != true)) {
                    this.ScheduleSettingsField = value;
                    this.RaisePropertyChanged("ScheduleSettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public CheckmarxTool.CxSDKWebService.ScanActionSettings ScanActionSettings {
            get {
                return this.ScanActionSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.ScanActionSettingsField, value) != true)) {
                    this.ScanActionSettingsField = value;
                    this.RaisePropertyChanged("ScanActionSettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public CheckmarxTool.CxSDKWebService.CxWSProjectIssueTrackingSettings ProjectIssueTrackingSettings {
            get {
                return this.ProjectIssueTrackingSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectIssueTrackingSettingsField, value) != true)) {
                    this.ProjectIssueTrackingSettingsField = value;
                    this.RaisePropertyChanged("ProjectIssueTrackingSettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public CheckmarxTool.CxSDKWebService.CxWSProjectCustomField[] CustomFields {
            get {
                return this.CustomFieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomFieldsField, value) != true)) {
                    this.CustomFieldsField = value;
                    this.RaisePropertyChanged("CustomFields");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public CheckmarxTool.CxSDKWebService.DataRetentionSettings DataRetentionSettings {
            get {
                return this.DataRetentionSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.DataRetentionSettingsField, value) != true)) {
                    this.DataRetentionSettingsField = value;
                    this.RaisePropertyChanged("DataRetentionSettings");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScheduleSettings", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class ScheduleSettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private CheckmarxTool.CxSDKWebService.ScheduleType ScheduleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.DayOfWeek[] ScheduledDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.CxDateTime TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.CxDateTime StartSchedulingPeriodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.CxDateTime EndSchedulingPeriodField;
        
        private int SchedulingFrequencyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public CheckmarxTool.CxSDKWebService.ScheduleType Schedule {
            get {
                return this.ScheduleField;
            }
            set {
                if ((this.ScheduleField.Equals(value) != true)) {
                    this.ScheduleField = value;
                    this.RaisePropertyChanged("Schedule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public CheckmarxTool.CxSDKWebService.DayOfWeek[] ScheduledDays {
            get {
                return this.ScheduledDaysField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduledDaysField, value) != true)) {
                    this.ScheduledDaysField = value;
                    this.RaisePropertyChanged("ScheduledDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public CheckmarxTool.CxSDKWebService.CxDateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeField, value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public CheckmarxTool.CxSDKWebService.CxDateTime StartSchedulingPeriod {
            get {
                return this.StartSchedulingPeriodField;
            }
            set {
                if ((object.ReferenceEquals(this.StartSchedulingPeriodField, value) != true)) {
                    this.StartSchedulingPeriodField = value;
                    this.RaisePropertyChanged("StartSchedulingPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public CheckmarxTool.CxSDKWebService.CxDateTime EndSchedulingPeriod {
            get {
                return this.EndSchedulingPeriodField;
            }
            set {
                if ((object.ReferenceEquals(this.EndSchedulingPeriodField, value) != true)) {
                    this.EndSchedulingPeriodField = value;
                    this.RaisePropertyChanged("EndSchedulingPeriod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public int SchedulingFrequency {
            get {
                return this.SchedulingFrequencyField;
            }
            set {
                if ((this.SchedulingFrequencyField.Equals(value) != true)) {
                    this.SchedulingFrequencyField = value;
                    this.RaisePropertyChanged("SchedulingFrequency");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScanActionSettings", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class ScanActionSettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.ScanAction[] ScanActionListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public CheckmarxTool.CxSDKWebService.ScanAction[] ScanActionList {
            get {
                return this.ScanActionListField;
            }
            set {
                if ((object.ReferenceEquals(this.ScanActionListField, value) != true)) {
                    this.ScanActionListField = value;
                    this.RaisePropertyChanged("ScanActionList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxWSProjectIssueTrackingSettings", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class CxWSProjectIssueTrackingSettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long TrackingSystemIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.CxWSIssueTrackingParam[] ParamsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long TrackingSystemID {
            get {
                return this.TrackingSystemIDField;
            }
            set {
                if ((this.TrackingSystemIDField.Equals(value) != true)) {
                    this.TrackingSystemIDField = value;
                    this.RaisePropertyChanged("TrackingSystemID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public CheckmarxTool.CxSDKWebService.CxWSIssueTrackingParam[] Params {
            get {
                return this.ParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.ParamsField, value) != true)) {
                    this.ParamsField = value;
                    this.RaisePropertyChanged("Params");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataRetentionSettings", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class DataRetentionSettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int NumOfScansToKeepField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int NumOfScansToKeep {
            get {
                return this.NumOfScansToKeepField;
            }
            set {
                if ((this.NumOfScansToKeepField.Equals(value) != true)) {
                    this.NumOfScansToKeepField = value;
                    this.RaisePropertyChanged("NumOfScansToKeep");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxWSProjectCustomField", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class CxWSProjectCustomField : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long CustomFieldIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long CustomFieldId {
            get {
                return this.CustomFieldIdField;
            }
            set {
                if ((this.CustomFieldIdField.Equals(value) != true)) {
                    this.CustomFieldIdField = value;
                    this.RaisePropertyChanged("CustomFieldId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScheduleType", Namespace="http://Checkmarx.com/v7")]
    public enum ScheduleType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Now = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Weekly = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DayOfWeek", Namespace="http://Checkmarx.com/v7")]
    public enum DayOfWeek : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sunday = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Monday = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tuesday = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Wednesday = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Thursday = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Friday = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Saturday = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScanAction", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class ScanAction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.ArrayOfString ParametersField;
        
        private CheckmarxTool.CxSDKWebService.ScanEventType TriggerField;
        
        private CheckmarxTool.CxSDKWebService.ScanActionType ActionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public CheckmarxTool.CxSDKWebService.ArrayOfString Parameters {
            get {
                return this.ParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.ParametersField, value) != true)) {
                    this.ParametersField = value;
                    this.RaisePropertyChanged("Parameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public CheckmarxTool.CxSDKWebService.ScanEventType Trigger {
            get {
                return this.TriggerField;
            }
            set {
                if ((this.TriggerField.Equals(value) != true)) {
                    this.TriggerField = value;
                    this.RaisePropertyChanged("Trigger");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public CheckmarxTool.CxSDKWebService.ScanActionType Action {
            get {
                return this.ActionField;
            }
            set {
                if ((this.ActionField.Equals(value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScanEventType", Namespace="http://Checkmarx.com/v7")]
    public enum ScanEventType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BeforeScanStarts = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AfterScanSucceeds = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnScanFailure = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScanActionType", Namespace="http://Checkmarx.com/v7")]
    public enum ScanActionType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmailNotification = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PostScanAction = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxWSIssueTrackingParam", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CliScanArgs))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.ProjectSettings))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.ProjectSharedLocation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.ArrayOfString))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.Credentials))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.ProjectOrigin))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.SourceCodeSettings))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.SourceLocationType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.ScanPath[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.ScanPath))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.SourceControlSettings))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.RepositoryType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.SourceControlProtocolType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.GitLsRemoteViewType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.GitHubIntegrationSettings))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSPerforceBrowsingMode))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.LocalCodeContainer))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.SourceFilterPatterns))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxClientType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSResponseRunID))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.ArrayOfLong))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSResponsePresetList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.Preset[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.Preset))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSResponseConfigSetList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.ConfigurationSet[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.ConfigurationSet))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSResponseProjectsDisplayData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.ProjectDisplayData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.ProjectDisplayData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.UserPermission))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxDateTime))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSResponseProjectScannedDisplayData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.ProjectScannedDisplayData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.ProjectScannedDisplayData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSResponseProjectConfig))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.ProjectConfiguration))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.ScheduleSettings))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.ScheduleType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.DayOfWeek[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.DayOfWeek))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.ScanActionSettings))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.ScanAction[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.ScanAction))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.ScanEventType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.ScanActionType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSProjectIssueTrackingSettings))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSIssueTrackingParam[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSProjectCustomField[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSProjectCustomField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.DataRetentionSettings))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.ArrayOfAnyType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSResponseLoginData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSResponseSessionID))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.Group))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.GroupType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.Group[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSResponseGroupList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSResponseScanStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CurrentStatusEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.ScanDisplayData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.ScanType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.ScanDisplayData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSResponseScansDisplayData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSQueryLanguageState))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSQueryLanguageState[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSResponseScanSummary))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSItemAndCRUD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSItemTypeEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSEnableCRUDAction[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSEnableCRUDAction))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSCrudEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.Role))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSRoleWithUserPrivileges))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSItemAndCRUD[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.WebClientUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.UserData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.UserData[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSResponseUserData))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSReportRequest))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSReportType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSCreateReportResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSReportStatusResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSResponseScanResults))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxDataRetentionConfiguration))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxDataRetentionType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSLdapGroupMapping))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSLdapGroup))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSLdapGroupMapping[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSResponseTeamLdapGroupMappingData))]
    public partial class CxWSIssueTrackingParam : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public object Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfLong", Namespace="http://Checkmarx.com/v7", ItemName="long")]
    [System.SerializableAttribute()]
    public class ArrayOfLong : System.Collections.Generic.List<long> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfAnyType", Namespace="http://Checkmarx.com/v7", ItemName="anyType")]
    [System.SerializableAttribute()]
    public class ArrayOfAnyType : System.Collections.Generic.List<object> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Group", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class Group : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        private CheckmarxTool.CxSDKWebService.GroupType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public CheckmarxTool.CxSDKWebService.GroupType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Guid {
            get {
                return this.GuidField;
            }
            set {
                if ((object.ReferenceEquals(this.GuidField, value) != true)) {
                    this.GuidField = value;
                    this.RaisePropertyChanged("Guid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string FullPath {
            get {
                return this.FullPathField;
            }
            set {
                if ((object.ReferenceEquals(this.FullPathField, value) != true)) {
                    this.FullPathField = value;
                    this.RaisePropertyChanged("FullPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroupType", Namespace="http://Checkmarx.com/v7")]
    public enum GroupType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Team = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Company = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SP = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Server = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CurrentStatusEnum", Namespace="http://Checkmarx.com/v7")]
    public enum CurrentStatusEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Queued = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Working = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Finished = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failed = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Canceled = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deleted = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unzipping = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WaitingToProcess = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScanDisplayData", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class ScanDisplayData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long ScanIDField;
        
        private bool IsAllowedToDeleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.CxDateTime QueuedDateTimeField;
        
        private int RiskLevelScoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.CxDateTime FinishedDateTimeField;
        
        private long ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InitiatorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TeamNameField;
        
        private bool IsIncrementalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CxVersionField;
        
        private long LOCField;
        
        private int HighSeverityResultsField;
        
        private int MediumSeverityResultsField;
        
        private int LowSeverityResultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsField;
        
        private CheckmarxTool.CxSDKWebService.ScanType ScanDisplayTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailedLOCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.CxDateTime StatisticsCalculationDateField;
        
        private bool IsPublicField;
        
        private bool IsLockedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long ScanID {
            get {
                return this.ScanIDField;
            }
            set {
                if ((this.ScanIDField.Equals(value) != true)) {
                    this.ScanIDField = value;
                    this.RaisePropertyChanged("ScanID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public bool IsAllowedToDelete {
            get {
                return this.IsAllowedToDeleteField;
            }
            set {
                if ((this.IsAllowedToDeleteField.Equals(value) != true)) {
                    this.IsAllowedToDeleteField = value;
                    this.RaisePropertyChanged("IsAllowedToDelete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public CheckmarxTool.CxSDKWebService.CxDateTime QueuedDateTime {
            get {
                return this.QueuedDateTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.QueuedDateTimeField, value) != true)) {
                    this.QueuedDateTimeField = value;
                    this.RaisePropertyChanged("QueuedDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int RiskLevelScore {
            get {
                return this.RiskLevelScoreField;
            }
            set {
                if ((this.RiskLevelScoreField.Equals(value) != true)) {
                    this.RiskLevelScoreField = value;
                    this.RaisePropertyChanged("RiskLevelScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public CheckmarxTool.CxSDKWebService.CxDateTime FinishedDateTime {
            get {
                return this.FinishedDateTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.FinishedDateTimeField, value) != true)) {
                    this.FinishedDateTimeField = value;
                    this.RaisePropertyChanged("FinishedDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public long ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string ProjectName {
            get {
                return this.ProjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNameField, value) != true)) {
                    this.ProjectNameField = value;
                    this.RaisePropertyChanged("ProjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string InitiatorName {
            get {
                return this.InitiatorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InitiatorNameField, value) != true)) {
                    this.InitiatorNameField = value;
                    this.RaisePropertyChanged("InitiatorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string TeamName {
            get {
                return this.TeamNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamNameField, value) != true)) {
                    this.TeamNameField = value;
                    this.RaisePropertyChanged("TeamName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=9)]
        public bool IsIncremental {
            get {
                return this.IsIncrementalField;
            }
            set {
                if ((this.IsIncrementalField.Equals(value) != true)) {
                    this.IsIncrementalField = value;
                    this.RaisePropertyChanged("IsIncremental");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string CxVersion {
            get {
                return this.CxVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.CxVersionField, value) != true)) {
                    this.CxVersionField = value;
                    this.RaisePropertyChanged("CxVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=11)]
        public long LOC {
            get {
                return this.LOCField;
            }
            set {
                if ((this.LOCField.Equals(value) != true)) {
                    this.LOCField = value;
                    this.RaisePropertyChanged("LOC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=12)]
        public int HighSeverityResults {
            get {
                return this.HighSeverityResultsField;
            }
            set {
                if ((this.HighSeverityResultsField.Equals(value) != true)) {
                    this.HighSeverityResultsField = value;
                    this.RaisePropertyChanged("HighSeverityResults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=13)]
        public int MediumSeverityResults {
            get {
                return this.MediumSeverityResultsField;
            }
            set {
                if ((this.MediumSeverityResultsField.Equals(value) != true)) {
                    this.MediumSeverityResultsField = value;
                    this.RaisePropertyChanged("MediumSeverityResults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=14)]
        public int LowSeverityResults {
            get {
                return this.LowSeverityResultsField;
            }
            set {
                if ((this.LowSeverityResultsField.Equals(value) != true)) {
                    this.LowSeverityResultsField = value;
                    this.RaisePropertyChanged("LowSeverityResults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=15)]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=16)]
        public CheckmarxTool.CxSDKWebService.ScanType ScanDisplayType {
            get {
                return this.ScanDisplayTypeField;
            }
            set {
                if ((this.ScanDisplayTypeField.Equals(value) != true)) {
                    this.ScanDisplayTypeField = value;
                    this.RaisePropertyChanged("ScanDisplayType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=17)]
        public string ServerName {
            get {
                return this.ServerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerNameField, value) != true)) {
                    this.ServerNameField = value;
                    this.RaisePropertyChanged("ServerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=18)]
        public string Origin {
            get {
                return this.OriginField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginField, value) != true)) {
                    this.OriginField = value;
                    this.RaisePropertyChanged("Origin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=19)]
        public string FailedLOC {
            get {
                return this.FailedLOCField;
            }
            set {
                if ((object.ReferenceEquals(this.FailedLOCField, value) != true)) {
                    this.FailedLOCField = value;
                    this.RaisePropertyChanged("FailedLOC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=20)]
        public CheckmarxTool.CxSDKWebService.CxDateTime StatisticsCalculationDate {
            get {
                return this.StatisticsCalculationDateField;
            }
            set {
                if ((object.ReferenceEquals(this.StatisticsCalculationDateField, value) != true)) {
                    this.StatisticsCalculationDateField = value;
                    this.RaisePropertyChanged("StatisticsCalculationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=21)]
        public bool IsPublic {
            get {
                return this.IsPublicField;
            }
            set {
                if ((this.IsPublicField.Equals(value) != true)) {
                    this.IsPublicField = value;
                    this.RaisePropertyChanged("IsPublic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=22)]
        public bool IsLocked {
            get {
                return this.IsLockedField;
            }
            set {
                if ((this.IsLockedField.Equals(value) != true)) {
                    this.IsLockedField = value;
                    this.RaisePropertyChanged("IsLocked");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScanType", Namespace="http://Checkmarx.com/v7")]
    public enum ScanType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UNKNOWN = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ALLSCANS = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        REGULAR = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUBSET = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PARTIAL = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RUNNING = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxWSQueryLanguageState", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class CxWSQueryLanguageState : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int LanguageIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageHashField;
        
        private System.DateTime StateCreationDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int LanguageID {
            get {
                return this.LanguageIDField;
            }
            set {
                if ((this.LanguageIDField.Equals(value) != true)) {
                    this.LanguageIDField = value;
                    this.RaisePropertyChanged("LanguageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string LanguageName {
            get {
                return this.LanguageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageNameField, value) != true)) {
                    this.LanguageNameField = value;
                    this.RaisePropertyChanged("LanguageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string LanguageHash {
            get {
                return this.LanguageHashField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageHashField, value) != true)) {
                    this.LanguageHashField = value;
                    this.RaisePropertyChanged("LanguageHash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public System.DateTime StateCreationDate {
            get {
                return this.StateCreationDateField;
            }
            set {
                if ((this.StateCreationDateField.Equals(value) != true)) {
                    this.StateCreationDateField = value;
                    this.RaisePropertyChanged("StateCreationDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxWSItemAndCRUD", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class CxWSItemAndCRUD : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private CheckmarxTool.CxSDKWebService.CxWSItemTypeEnum TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.CxWSEnableCRUDAction[] CRUDActionListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public CheckmarxTool.CxSDKWebService.CxWSItemTypeEnum Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public CheckmarxTool.CxSDKWebService.CxWSEnableCRUDAction[] CRUDActionList {
            get {
                return this.CRUDActionListField;
            }
            set {
                if ((object.ReferenceEquals(this.CRUDActionListField, value) != true)) {
                    this.CRUDActionListField = value;
                    this.RaisePropertyChanged("CRUDActionList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxWSItemTypeEnum", Namespace="http://Checkmarx.com/v7")]
    public enum CxWSItemTypeEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Project = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Task = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Scan = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Preset = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Configuration = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Users = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Roles = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SystemSettings = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ignore_Path = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResultComment = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResultSeverity = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ResultStatus = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AuditUser = 13,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxWSEnableCRUDAction", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class CxWSEnableCRUDAction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private CheckmarxTool.CxSDKWebService.CxWSCrudEnum TypeField;
        
        private bool EnableField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public CheckmarxTool.CxSDKWebService.CxWSCrudEnum Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public bool Enable {
            get {
                return this.EnableField;
            }
            set {
                if ((this.EnableField.Equals(value) != true)) {
                    this.EnableField = value;
                    this.RaisePropertyChanged("Enable");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxWSCrudEnum", Namespace="http://Checkmarx.com/v7")]
    public enum CxWSCrudEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Create = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Delete = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Update = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        View = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Run = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Investigate = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.CxWSRoleWithUserPrivileges))]
    public partial class Role : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxWSRoleWithUserPrivileges", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class CxWSRoleWithUserPrivileges : CheckmarxTool.CxSDKWebService.Role {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.CxWSItemAndCRUD[] ItemsCRUDField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public CheckmarxTool.CxSDKWebService.CxWSItemAndCRUD[] ItemsCRUD {
            get {
                return this.ItemsCRUDField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsCRUDField, value) != true)) {
                    this.ItemsCRUDField = value;
                    this.RaisePropertyChanged("ItemsCRUD");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebClientUser", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CheckmarxTool.CxSDKWebService.UserData))]
    public partial class WebClientUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        private int UserPreferedLanguageLCIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UPNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CellPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string willExpireAfterDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string countryField;
        
        private System.DateTime DateCreatedField;
        
        private bool AuditUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.Group[] GroupListField;
        
        private System.DateTime LastLoginDateField;
        
        private bool LimitAccessByIPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.ArrayOfString AllowedIPsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int UserPreferedLanguageLCID {
            get {
                return this.UserPreferedLanguageLCIDField;
            }
            set {
                if ((this.UserPreferedLanguageLCIDField.Equals(value) != true)) {
                    this.UserPreferedLanguageLCIDField = value;
                    this.RaisePropertyChanged("UserPreferedLanguageLCID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string JobTitle {
            get {
                return this.JobTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.JobTitleField, value) != true)) {
                    this.JobTitleField = value;
                    this.RaisePropertyChanged("JobTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string UPN {
            get {
                return this.UPNField;
            }
            set {
                if ((object.ReferenceEquals(this.UPNField, value) != true)) {
                    this.UPNField = value;
                    this.RaisePropertyChanged("UPN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string CellPhone {
            get {
                return this.CellPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.CellPhoneField, value) != true)) {
                    this.CellPhoneField = value;
                    this.RaisePropertyChanged("CellPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public string Skype {
            get {
                return this.SkypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SkypeField, value) != true)) {
                    this.SkypeField = value;
                    this.RaisePropertyChanged("Skype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public string CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyIDField, value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=14)]
        public string willExpireAfterDays {
            get {
                return this.willExpireAfterDaysField;
            }
            set {
                if ((object.ReferenceEquals(this.willExpireAfterDaysField, value) != true)) {
                    this.willExpireAfterDaysField = value;
                    this.RaisePropertyChanged("willExpireAfterDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=15)]
        public string country {
            get {
                return this.countryField;
            }
            set {
                if ((object.ReferenceEquals(this.countryField, value) != true)) {
                    this.countryField = value;
                    this.RaisePropertyChanged("country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=16)]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=17)]
        public bool AuditUser {
            get {
                return this.AuditUserField;
            }
            set {
                if ((this.AuditUserField.Equals(value) != true)) {
                    this.AuditUserField = value;
                    this.RaisePropertyChanged("AuditUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=18)]
        public CheckmarxTool.CxSDKWebService.Group[] GroupList {
            get {
                return this.GroupListField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupListField, value) != true)) {
                    this.GroupListField = value;
                    this.RaisePropertyChanged("GroupList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=19)]
        public System.DateTime LastLoginDate {
            get {
                return this.LastLoginDateField;
            }
            set {
                if ((this.LastLoginDateField.Equals(value) != true)) {
                    this.LastLoginDateField = value;
                    this.RaisePropertyChanged("LastLoginDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=20)]
        public bool LimitAccessByIPAddress {
            get {
                return this.LimitAccessByIPAddressField;
            }
            set {
                if ((this.LimitAccessByIPAddressField.Equals(value) != true)) {
                    this.LimitAccessByIPAddressField = value;
                    this.RaisePropertyChanged("LimitAccessByIPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=21)]
        public CheckmarxTool.CxSDKWebService.ArrayOfString AllowedIPs {
            get {
                return this.AllowedIPsField;
            }
            set {
                if ((object.ReferenceEquals(this.AllowedIPsField, value) != true)) {
                    this.AllowedIPsField = value;
                    this.RaisePropertyChanged("AllowedIPs");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserData", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class UserData : CheckmarxTool.CxSDKWebService.WebClientUser {
        
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.Role RoleDataField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public CheckmarxTool.CxSDKWebService.Role RoleData {
            get {
                return this.RoleDataField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleDataField, value) != true)) {
                    this.RoleDataField = value;
                    this.RaisePropertyChanged("RoleData");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxWSReportRequest", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class CxWSReportRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private CheckmarxTool.CxSDKWebService.CxWSReportType TypeField;
        
        private long ScanIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public CheckmarxTool.CxSDKWebService.CxWSReportType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public long ScanID {
            get {
                return this.ScanIDField;
            }
            set {
                if ((this.ScanIDField.Equals(value) != true)) {
                    this.ScanIDField = value;
                    this.RaisePropertyChanged("ScanID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxWSReportType", Namespace="http://Checkmarx.com/v7")]
    public enum CxWSReportType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDF = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RTF = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CSV = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XML = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxDataRetentionConfiguration", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class CxDataRetentionConfiguration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private CheckmarxTool.CxSDKWebService.CxDataRetentionType DataRetentionTypeField;
        
        private int NumOfScansToPreserveField;
        
        private long StartDateField;
        
        private long EndDateField;
        
        private System.Nullable<long> DurationLimitInHoursField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public CheckmarxTool.CxSDKWebService.CxDataRetentionType DataRetentionType {
            get {
                return this.DataRetentionTypeField;
            }
            set {
                if ((this.DataRetentionTypeField.Equals(value) != true)) {
                    this.DataRetentionTypeField = value;
                    this.RaisePropertyChanged("DataRetentionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int NumOfScansToPreserve {
            get {
                return this.NumOfScansToPreserveField;
            }
            set {
                if ((this.NumOfScansToPreserveField.Equals(value) != true)) {
                    this.NumOfScansToPreserveField = value;
                    this.RaisePropertyChanged("NumOfScansToPreserve");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public long StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public long EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public System.Nullable<long> DurationLimitInHours {
            get {
                return this.DurationLimitInHoursField;
            }
            set {
                if ((this.DurationLimitInHoursField.Equals(value) != true)) {
                    this.DurationLimitInHoursField = value;
                    this.RaisePropertyChanged("DurationLimitInHours");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxDataRetentionType", Namespace="http://Checkmarx.com/v7")]
    public enum CxDataRetentionType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NumOfScansToPreserve = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DatesRange = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxWSLdapGroupMapping", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class CxWSLdapGroupMapping : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int LdapServerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheckmarxTool.CxSDKWebService.CxWSLdapGroup LdapGroupField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int LdapServerId {
            get {
                return this.LdapServerIdField;
            }
            set {
                if ((this.LdapServerIdField.Equals(value) != true)) {
                    this.LdapServerIdField = value;
                    this.RaisePropertyChanged("LdapServerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public CheckmarxTool.CxSDKWebService.CxWSLdapGroup LdapGroup {
            get {
                return this.LdapGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.LdapGroupField, value) != true)) {
                    this.LdapGroupField = value;
                    this.RaisePropertyChanged("LdapGroup");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxWSLdapGroup", Namespace="http://Checkmarx.com/v7")]
    [System.SerializableAttribute()]
    public partial class CxWSLdapGroup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string DN {
            get {
                return this.DNField;
            }
            set {
                if ((object.ReferenceEquals(this.DNField, value) != true)) {
                    this.DNField = value;
                    this.RaisePropertyChanged("DN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Checkmarx.com/v7", ConfigurationName="CxSDKWebService.CxSDKWebServiceSoap")]
    public interface CxSDKWebServiceSoap {
        
        // CODEGEN: Generating message contract since element name sessionId from namespace http://Checkmarx.com/v7 is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/Scan", ReplyAction="*")]
        CheckmarxTool.CxSDKWebService.ScanResponse Scan(CheckmarxTool.CxSDKWebService.ScanRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/Scan", ReplyAction="*")]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.ScanResponse> ScanAsync(CheckmarxTool.CxSDKWebService.ScanRequest request);
        
        // CODEGEN: Generating message contract since element name sessionId from namespace http://Checkmarx.com/v7 is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/BranchProjectById", ReplyAction="*")]
        CheckmarxTool.CxSDKWebService.BranchProjectByIdResponse BranchProjectById(CheckmarxTool.CxSDKWebService.BranchProjectByIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/BranchProjectById", ReplyAction="*")]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.BranchProjectByIdResponse> BranchProjectByIdAsync(CheckmarxTool.CxSDKWebService.BranchProjectByIdRequest request);
        
        // CODEGEN: Generating message contract since element name sessionId from namespace http://Checkmarx.com/v7 is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/ScanWithOriginName", ReplyAction="*")]
        CheckmarxTool.CxSDKWebService.ScanWithOriginNameResponse ScanWithOriginName(CheckmarxTool.CxSDKWebService.ScanWithOriginNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/ScanWithOriginName", ReplyAction="*")]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.ScanWithOriginNameResponse> ScanWithOriginNameAsync(CheckmarxTool.CxSDKWebService.ScanWithOriginNameRequest request);
        
        // CODEGEN: Generating message contract since element name sessionID from namespace http://Checkmarx.com/v7 is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/CancelScan", ReplyAction="*")]
        CheckmarxTool.CxSDKWebService.CancelScanResponse CancelScan(CheckmarxTool.CxSDKWebService.CancelScanRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/CancelScan", ReplyAction="*")]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.CancelScanResponse> CancelScanAsync(CheckmarxTool.CxSDKWebService.CancelScanRequest request);
        
        // CODEGEN: Generating message contract since element name sessionID from namespace http://Checkmarx.com/v7 is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/DeleteProjects", ReplyAction="*")]
        CheckmarxTool.CxSDKWebService.DeleteProjectsResponse DeleteProjects(CheckmarxTool.CxSDKWebService.DeleteProjectsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/DeleteProjects", ReplyAction="*")]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.DeleteProjectsResponse> DeleteProjectsAsync(CheckmarxTool.CxSDKWebService.DeleteProjectsRequest request);
        
        // CODEGEN: Generating message contract since element name sessionID from namespace http://Checkmarx.com/v7 is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/DeleteScans", ReplyAction="*")]
        CheckmarxTool.CxSDKWebService.DeleteScansResponse DeleteScans(CheckmarxTool.CxSDKWebService.DeleteScansRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/DeleteScans", ReplyAction="*")]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.DeleteScansResponse> DeleteScansAsync(CheckmarxTool.CxSDKWebService.DeleteScansRequest request);
        
        // CODEGEN: Generating message contract since element name sessionId from namespace http://Checkmarx.com/v7 is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/ScanWithScheduling", ReplyAction="*")]
        CheckmarxTool.CxSDKWebService.ScanWithSchedulingResponse ScanWithScheduling(CheckmarxTool.CxSDKWebService.ScanWithSchedulingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/ScanWithScheduling", ReplyAction="*")]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.ScanWithSchedulingResponse> ScanWithSchedulingAsync(CheckmarxTool.CxSDKWebService.ScanWithSchedulingRequest request);
        
        // CODEGEN: Generating message contract since element name sessionId from namespace http://Checkmarx.com/v7 is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/ScanWithSchedulingWithCron", ReplyAction="*")]
        CheckmarxTool.CxSDKWebService.ScanWithSchedulingWithCronResponse ScanWithSchedulingWithCron(CheckmarxTool.CxSDKWebService.ScanWithSchedulingWithCronRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/ScanWithSchedulingWithCron", ReplyAction="*")]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.ScanWithSchedulingWithCronResponse> ScanWithSchedulingWithCronAsync(CheckmarxTool.CxSDKWebService.ScanWithSchedulingWithCronRequest request);
        
        // CODEGEN: Generating message contract since element name sessionID from namespace http://Checkmarx.com/v7 is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/UpdateScanComment", ReplyAction="*")]
        CheckmarxTool.CxSDKWebService.UpdateScanCommentResponse UpdateScanComment(CheckmarxTool.CxSDKWebService.UpdateScanCommentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/UpdateScanComment", ReplyAction="*")]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.UpdateScanCommentResponse> UpdateScanCommentAsync(CheckmarxTool.CxSDKWebService.UpdateScanCommentRequest request);
        
        // CODEGEN: Generating message contract since element name SessionID from namespace http://Checkmarx.com/v7 is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/GetPresetList", ReplyAction="*")]
        CheckmarxTool.CxSDKWebService.GetPresetListResponse GetPresetList(CheckmarxTool.CxSDKWebService.GetPresetListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/GetPresetList", ReplyAction="*")]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetPresetListResponse> GetPresetListAsync(CheckmarxTool.CxSDKWebService.GetPresetListRequest request);
        
        // CODEGEN: Generating message contract since element name SessionID from namespace http://Checkmarx.com/v7 is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/GetConfigurationSetList", ReplyAction="*")]
        CheckmarxTool.CxSDKWebService.GetConfigurationSetListResponse GetConfigurationSetList(CheckmarxTool.CxSDKWebService.GetConfigurationSetListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/GetConfigurationSetList", ReplyAction="*")]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetConfigurationSetListResponse> GetConfigurationSetListAsync(CheckmarxTool.CxSDKWebService.GetConfigurationSetListRequest request);
        
        // CODEGEN: Generating message contract since element name sessionID from namespace http://Checkmarx.com/v7 is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/GetProjectsDisplayData", ReplyAction="*")]
        CheckmarxTool.CxSDKWebService.GetProjectsDisplayDataResponse GetProjectsDisplayData(CheckmarxTool.CxSDKWebService.GetProjectsDisplayDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/GetProjectsDisplayData", ReplyAction="*")]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetProjectsDisplayDataResponse> GetProjectsDisplayDataAsync(CheckmarxTool.CxSDKWebService.GetProjectsDisplayDataRequest request);
        
        // CODEGEN: Generating message contract since element name sessionID from namespace http://Checkmarx.com/v7 is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/GetProjectScannedDisplayData", ReplyAction="*")]
        CheckmarxTool.CxSDKWebService.GetProjectScannedDisplayDataResponse GetProjectScannedDisplayData(CheckmarxTool.CxSDKWebService.GetProjectScannedDisplayDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/GetProjectScannedDisplayData", ReplyAction="*")]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetProjectScannedDisplayDataResponse> GetProjectScannedDisplayDataAsync(CheckmarxTool.CxSDKWebService.GetProjectScannedDisplayDataRequest request);
        
        // CODEGEN: Generating message contract since element name sessionID from namespace http://Checkmarx.com/v7 is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/GetProjectConfiguration", ReplyAction="*")]
        CheckmarxTool.CxSDKWebService.GetProjectConfigurationResponse GetProjectConfiguration(CheckmarxTool.CxSDKWebService.GetProjectConfigurationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/GetProjectConfiguration", ReplyAction="*")]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetProjectConfigurationResponse> GetProjectConfigurationAsync(CheckmarxTool.CxSDKWebService.GetProjectConfigurationRequest request);
        
        // CODEGEN: Generating message contract since element name sessionID from namespace http://Checkmarx.com/v7 is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/UpdateProjectIncrementalConfiguration", ReplyAction="*")]
        CheckmarxTool.CxSDKWebService.UpdateProjectIncrementalConfigurationResponse UpdateProjectIncrementalConfiguration(CheckmarxTool.CxSDKWebService.UpdateProjectIncrementalConfigurationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/UpdateProjectIncrementalConfiguration", ReplyAction="*")]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.UpdateProjectIncrementalConfigurationResponse> UpdateProjectIncrementalConfigurationAsync(CheckmarxTool.CxSDKWebService.UpdateProjectIncrementalConfigurationRequest request);
        
        // CODEGEN: Generating message contract since element name applicationCredentials from namespace http://Checkmarx.com/v7 is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/Login", ReplyAction="*")]
        CheckmarxTool.CxSDKWebService.LoginResponse Login(CheckmarxTool.CxSDKWebService.LoginRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/Login", ReplyAction="*")]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.LoginResponse> LoginAsync(CheckmarxTool.CxSDKWebService.LoginRequest request);
        
        // CODEGEN: Generating message contract since element name token from namespace http://Checkmarx.com/v7 is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/LoginWithToken", ReplyAction="*")]
        CheckmarxTool.CxSDKWebService.LoginWithTokenResponse LoginWithToken(CheckmarxTool.CxSDKWebService.LoginWithTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/LoginWithToken", ReplyAction="*")]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.LoginWithTokenResponse> LoginWithTokenAsync(CheckmarxTool.CxSDKWebService.LoginWithTokenRequest request);
        
        // CODEGEN: Generating message contract since element name sessionID from namespace http://Checkmarx.com/v7 is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/Logout", ReplyAction="*")]
        CheckmarxTool.CxSDKWebService.LogoutResponse Logout(CheckmarxTool.CxSDKWebService.LogoutRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/Logout", ReplyAction="*")]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.LogoutResponse> LogoutAsync(CheckmarxTool.CxSDKWebService.LogoutRequest request);
        
        // CODEGEN: Generating message contract since element name SessionID from namespace http://Checkmarx.com/v7 is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/GetAssociatedGroupsList", ReplyAction="*")]
        CheckmarxTool.CxSDKWebService.GetAssociatedGroupsListResponse GetAssociatedGroupsList(CheckmarxTool.CxSDKWebService.GetAssociatedGroupsListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/GetAssociatedGroupsList", ReplyAction="*")]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetAssociatedGroupsListResponse> GetAssociatedGroupsListAsync(CheckmarxTool.CxSDKWebService.GetAssociatedGroupsListRequest request);
        
        // CODEGEN: Generating message contract since element name sessionID from namespace http://Checkmarx.com/v7 is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/GetStatusOfSingleScan", ReplyAction="*")]
        CheckmarxTool.CxSDKWebService.GetStatusOfSingleScanResponse GetStatusOfSingleScan(CheckmarxTool.CxSDKWebService.GetStatusOfSingleScanRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/GetStatusOfSingleScan", ReplyAction="*")]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetStatusOfSingleScanResponse> GetStatusOfSingleScanAsync(CheckmarxTool.CxSDKWebService.GetStatusOfSingleScanRequest request);
        
        // CODEGEN: Generating message contract since element name sessionID from namespace http://Checkmarx.com/v7 is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/GetScansDisplayDataForAllProjects", ReplyAction="*")]
        CheckmarxTool.CxSDKWebService.GetScansDisplayDataForAllProjectsResponse GetScansDisplayDataForAllProjects(CheckmarxTool.CxSDKWebService.GetScansDisplayDataForAllProjectsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/GetScansDisplayDataForAllProjects", ReplyAction="*")]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetScansDisplayDataForAllProjectsResponse> GetScansDisplayDataForAllProjectsAsync(CheckmarxTool.CxSDKWebService.GetScansDisplayDataForAllProjectsRequest request);
        
        // CODEGEN: Generating message contract since element name SessionID from namespace http://Checkmarx.com/v7 is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/GetScanSummary", ReplyAction="*")]
        CheckmarxTool.CxSDKWebService.GetScanSummaryResponse GetScanSummary(CheckmarxTool.CxSDKWebService.GetScanSummaryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/GetScanSummary", ReplyAction="*")]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetScanSummaryResponse> GetScanSummaryAsync(CheckmarxTool.CxSDKWebService.GetScanSummaryRequest request);
        
        // CODEGEN: Generating message contract since element name sessionID from namespace http://Checkmarx.com/v7 is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/UpdateProjectConfiguration", ReplyAction="*")]
        CheckmarxTool.CxSDKWebService.UpdateProjectConfigurationResponse UpdateProjectConfiguration(CheckmarxTool.CxSDKWebService.UpdateProjectConfigurationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/UpdateProjectConfiguration", ReplyAction="*")]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.UpdateProjectConfigurationResponse> UpdateProjectConfigurationAsync(CheckmarxTool.CxSDKWebService.UpdateProjectConfigurationRequest request);
        
        // CODEGEN: Generating message contract since element name sessionID from namespace http://Checkmarx.com/v7 is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/DeleteUser", ReplyAction="*")]
        CheckmarxTool.CxSDKWebService.DeleteUserResponse DeleteUser(CheckmarxTool.CxSDKWebService.DeleteUserRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/DeleteUser", ReplyAction="*")]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.DeleteUserResponse> DeleteUserAsync(CheckmarxTool.CxSDKWebService.DeleteUserRequest request);
        
        // CODEGEN: Generating message contract since element name sessionID from namespace http://Checkmarx.com/v7 is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/GetAllUsers", ReplyAction="*")]
        CheckmarxTool.CxSDKWebService.GetAllUsersResponse GetAllUsers(CheckmarxTool.CxSDKWebService.GetAllUsersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/GetAllUsers", ReplyAction="*")]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetAllUsersResponse> GetAllUsersAsync(CheckmarxTool.CxSDKWebService.GetAllUsersRequest request);
        
        // CODEGEN: Generating message contract since element name sessionID from namespace http://Checkmarx.com/v7 is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/CreateScanReport", ReplyAction="*")]
        CheckmarxTool.CxSDKWebService.CreateScanReportResponse CreateScanReport(CheckmarxTool.CxSDKWebService.CreateScanReportRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/CreateScanReport", ReplyAction="*")]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.CreateScanReportResponse> CreateScanReportAsync(CheckmarxTool.CxSDKWebService.CreateScanReportRequest request);
        
        // CODEGEN: Generating message contract since element name SessionID from namespace http://Checkmarx.com/v7 is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/GetScanReportStatus", ReplyAction="*")]
        CheckmarxTool.CxSDKWebService.GetScanReportStatusResponse GetScanReportStatus(CheckmarxTool.CxSDKWebService.GetScanReportStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/GetScanReportStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetScanReportStatusResponse> GetScanReportStatusAsync(CheckmarxTool.CxSDKWebService.GetScanReportStatusRequest request);
        
        // CODEGEN: Generating message contract since element name SessionID from namespace http://Checkmarx.com/v7 is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/GetScanReport", ReplyAction="*")]
        CheckmarxTool.CxSDKWebService.GetScanReportResponse GetScanReport(CheckmarxTool.CxSDKWebService.GetScanReportRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/GetScanReport", ReplyAction="*")]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetScanReportResponse> GetScanReportAsync(CheckmarxTool.CxSDKWebService.GetScanReportRequest request);
        
        // CODEGEN: Generating message contract since element name SessionID from namespace http://Checkmarx.com/v7 is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/ExecuteDataRetention", ReplyAction="*")]
        CheckmarxTool.CxSDKWebService.ExecuteDataRetentionResponse ExecuteDataRetention(CheckmarxTool.CxSDKWebService.ExecuteDataRetentionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/ExecuteDataRetention", ReplyAction="*")]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.ExecuteDataRetentionResponse> ExecuteDataRetentionAsync(CheckmarxTool.CxSDKWebService.ExecuteDataRetentionRequest request);
        
        // CODEGEN: Generating message contract since element name SessionID from namespace http://Checkmarx.com/v7 is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/StopDataRetention", ReplyAction="*")]
        CheckmarxTool.CxSDKWebService.StopDataRetentionResponse StopDataRetention(CheckmarxTool.CxSDKWebService.StopDataRetentionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/StopDataRetention", ReplyAction="*")]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.StopDataRetentionResponse> StopDataRetentionAsync(CheckmarxTool.CxSDKWebService.StopDataRetentionRequest request);
        
        // CODEGEN: Generating message contract since element name sessionId from namespace http://Checkmarx.com/v7 is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/GetTeamLdapGroupsMapping", ReplyAction="*")]
        CheckmarxTool.CxSDKWebService.GetTeamLdapGroupsMappingResponse GetTeamLdapGroupsMapping(CheckmarxTool.CxSDKWebService.GetTeamLdapGroupsMappingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/GetTeamLdapGroupsMapping", ReplyAction="*")]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetTeamLdapGroupsMappingResponse> GetTeamLdapGroupsMappingAsync(CheckmarxTool.CxSDKWebService.GetTeamLdapGroupsMappingRequest request);
        
        // CODEGEN: Generating message contract since element name sessionId from namespace http://Checkmarx.com/v7 is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/SetTeamLdapGroupsMapping", ReplyAction="*")]
        CheckmarxTool.CxSDKWebService.SetTeamLdapGroupsMappingResponse SetTeamLdapGroupsMapping(CheckmarxTool.CxSDKWebService.SetTeamLdapGroupsMappingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/v7/SetTeamLdapGroupsMapping", ReplyAction="*")]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.SetTeamLdapGroupsMappingResponse> SetTeamLdapGroupsMappingAsync(CheckmarxTool.CxSDKWebService.SetTeamLdapGroupsMappingRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ScanRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Scan", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.ScanRequestBody Body;
        
        public ScanRequest() {
        }
        
        public ScanRequest(CheckmarxTool.CxSDKWebService.ScanRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class ScanRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sessionId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public CheckmarxTool.CxSDKWebService.CliScanArgs args;
        
        public ScanRequestBody() {
        }
        
        public ScanRequestBody(string sessionId, CheckmarxTool.CxSDKWebService.CliScanArgs args) {
            this.sessionId = sessionId;
            this.args = args;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ScanResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ScanResponse", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.ScanResponseBody Body;
        
        public ScanResponse() {
        }
        
        public ScanResponse(CheckmarxTool.CxSDKWebService.ScanResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class ScanResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public CheckmarxTool.CxSDKWebService.CxWSResponseRunID ScanResult;
        
        public ScanResponseBody() {
        }
        
        public ScanResponseBody(CheckmarxTool.CxSDKWebService.CxWSResponseRunID ScanResult) {
            this.ScanResult = ScanResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class BranchProjectByIdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="BranchProjectById", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.BranchProjectByIdRequestBody Body;
        
        public BranchProjectByIdRequest() {
        }
        
        public BranchProjectByIdRequest(CheckmarxTool.CxSDKWebService.BranchProjectByIdRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class BranchProjectByIdRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sessionId;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long originProjectId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string newBranchProjectName;
        
        public BranchProjectByIdRequestBody() {
        }
        
        public BranchProjectByIdRequestBody(string sessionId, long originProjectId, string newBranchProjectName) {
            this.sessionId = sessionId;
            this.originProjectId = originProjectId;
            this.newBranchProjectName = newBranchProjectName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class BranchProjectByIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="BranchProjectByIdResponse", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.BranchProjectByIdResponseBody Body;
        
        public BranchProjectByIdResponse() {
        }
        
        public BranchProjectByIdResponse(CheckmarxTool.CxSDKWebService.BranchProjectByIdResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class BranchProjectByIdResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public CheckmarxTool.CxSDKWebService.CxWSResponseRunID BranchProjectByIdResult;
        
        public BranchProjectByIdResponseBody() {
        }
        
        public BranchProjectByIdResponseBody(CheckmarxTool.CxSDKWebService.CxWSResponseRunID BranchProjectByIdResult) {
            this.BranchProjectByIdResult = BranchProjectByIdResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ScanWithOriginNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ScanWithOriginName", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.ScanWithOriginNameRequestBody Body;
        
        public ScanWithOriginNameRequest() {
        }
        
        public ScanWithOriginNameRequest(CheckmarxTool.CxSDKWebService.ScanWithOriginNameRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class ScanWithOriginNameRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sessionId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public CheckmarxTool.CxSDKWebService.CliScanArgs args;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string origName;
        
        public ScanWithOriginNameRequestBody() {
        }
        
        public ScanWithOriginNameRequestBody(string sessionId, CheckmarxTool.CxSDKWebService.CliScanArgs args, string origName) {
            this.sessionId = sessionId;
            this.args = args;
            this.origName = origName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ScanWithOriginNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ScanWithOriginNameResponse", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.ScanWithOriginNameResponseBody Body;
        
        public ScanWithOriginNameResponse() {
        }
        
        public ScanWithOriginNameResponse(CheckmarxTool.CxSDKWebService.ScanWithOriginNameResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class ScanWithOriginNameResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public CheckmarxTool.CxSDKWebService.CxWSResponseRunID ScanWithOriginNameResult;
        
        public ScanWithOriginNameResponseBody() {
        }
        
        public ScanWithOriginNameResponseBody(CheckmarxTool.CxSDKWebService.CxWSResponseRunID ScanWithOriginNameResult) {
            this.ScanWithOriginNameResult = ScanWithOriginNameResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CancelScanRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CancelScan", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.CancelScanRequestBody Body;
        
        public CancelScanRequest() {
        }
        
        public CancelScanRequest(CheckmarxTool.CxSDKWebService.CancelScanRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class CancelScanRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sessionID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string RunId;
        
        public CancelScanRequestBody() {
        }
        
        public CancelScanRequestBody(string sessionID, string RunId) {
            this.sessionID = sessionID;
            this.RunId = RunId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CancelScanResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CancelScanResponse", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.CancelScanResponseBody Body;
        
        public CancelScanResponse() {
        }
        
        public CancelScanResponse(CheckmarxTool.CxSDKWebService.CancelScanResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class CancelScanResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse CancelScanResult;
        
        public CancelScanResponseBody() {
        }
        
        public CancelScanResponseBody(CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse CancelScanResult) {
            this.CancelScanResult = CancelScanResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteProjectsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DeleteProjects", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.DeleteProjectsRequestBody Body;
        
        public DeleteProjectsRequest() {
        }
        
        public DeleteProjectsRequest(CheckmarxTool.CxSDKWebService.DeleteProjectsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class DeleteProjectsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sessionID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public CheckmarxTool.CxSDKWebService.ArrayOfLong projectIDs;
        
        public DeleteProjectsRequestBody() {
        }
        
        public DeleteProjectsRequestBody(string sessionID, CheckmarxTool.CxSDKWebService.ArrayOfLong projectIDs) {
            this.sessionID = sessionID;
            this.projectIDs = projectIDs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteProjectsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DeleteProjectsResponse", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.DeleteProjectsResponseBody Body;
        
        public DeleteProjectsResponse() {
        }
        
        public DeleteProjectsResponse(CheckmarxTool.CxSDKWebService.DeleteProjectsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class DeleteProjectsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse DeleteProjectsResult;
        
        public DeleteProjectsResponseBody() {
        }
        
        public DeleteProjectsResponseBody(CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse DeleteProjectsResult) {
            this.DeleteProjectsResult = DeleteProjectsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteScansRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DeleteScans", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.DeleteScansRequestBody Body;
        
        public DeleteScansRequest() {
        }
        
        public DeleteScansRequest(CheckmarxTool.CxSDKWebService.DeleteScansRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class DeleteScansRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sessionID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public CheckmarxTool.CxSDKWebService.ArrayOfLong scanIDs;
        
        public DeleteScansRequestBody() {
        }
        
        public DeleteScansRequestBody(string sessionID, CheckmarxTool.CxSDKWebService.ArrayOfLong scanIDs) {
            this.sessionID = sessionID;
            this.scanIDs = scanIDs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteScansResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DeleteScansResponse", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.DeleteScansResponseBody Body;
        
        public DeleteScansResponse() {
        }
        
        public DeleteScansResponse(CheckmarxTool.CxSDKWebService.DeleteScansResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class DeleteScansResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse DeleteScansResult;
        
        public DeleteScansResponseBody() {
        }
        
        public DeleteScansResponseBody(CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse DeleteScansResult) {
            this.DeleteScansResult = DeleteScansResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ScanWithSchedulingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ScanWithScheduling", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.ScanWithSchedulingRequestBody Body;
        
        public ScanWithSchedulingRequest() {
        }
        
        public ScanWithSchedulingRequest(CheckmarxTool.CxSDKWebService.ScanWithSchedulingRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class ScanWithSchedulingRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sessionId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public CheckmarxTool.CxSDKWebService.CliScanArgs args;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string schedulingData;
        
        public ScanWithSchedulingRequestBody() {
        }
        
        public ScanWithSchedulingRequestBody(string sessionId, CheckmarxTool.CxSDKWebService.CliScanArgs args, string schedulingData) {
            this.sessionId = sessionId;
            this.args = args;
            this.schedulingData = schedulingData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ScanWithSchedulingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ScanWithSchedulingResponse", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.ScanWithSchedulingResponseBody Body;
        
        public ScanWithSchedulingResponse() {
        }
        
        public ScanWithSchedulingResponse(CheckmarxTool.CxSDKWebService.ScanWithSchedulingResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class ScanWithSchedulingResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public CheckmarxTool.CxSDKWebService.CxWSResponseRunID ScanWithSchedulingResult;
        
        public ScanWithSchedulingResponseBody() {
        }
        
        public ScanWithSchedulingResponseBody(CheckmarxTool.CxSDKWebService.CxWSResponseRunID ScanWithSchedulingResult) {
            this.ScanWithSchedulingResult = ScanWithSchedulingResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ScanWithSchedulingWithCronRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ScanWithSchedulingWithCron", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.ScanWithSchedulingWithCronRequestBody Body;
        
        public ScanWithSchedulingWithCronRequest() {
        }
        
        public ScanWithSchedulingWithCronRequest(CheckmarxTool.CxSDKWebService.ScanWithSchedulingWithCronRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class ScanWithSchedulingWithCronRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sessionId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public CheckmarxTool.CxSDKWebService.CliScanArgs args;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string cronString;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public long utcEpochStartTime;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public long utcEpochEndTime;
        
        public ScanWithSchedulingWithCronRequestBody() {
        }
        
        public ScanWithSchedulingWithCronRequestBody(string sessionId, CheckmarxTool.CxSDKWebService.CliScanArgs args, string cronString, long utcEpochStartTime, long utcEpochEndTime) {
            this.sessionId = sessionId;
            this.args = args;
            this.cronString = cronString;
            this.utcEpochStartTime = utcEpochStartTime;
            this.utcEpochEndTime = utcEpochEndTime;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ScanWithSchedulingWithCronResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ScanWithSchedulingWithCronResponse", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.ScanWithSchedulingWithCronResponseBody Body;
        
        public ScanWithSchedulingWithCronResponse() {
        }
        
        public ScanWithSchedulingWithCronResponse(CheckmarxTool.CxSDKWebService.ScanWithSchedulingWithCronResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class ScanWithSchedulingWithCronResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public CheckmarxTool.CxSDKWebService.CxWSResponseRunID ScanWithSchedulingWithCronResult;
        
        public ScanWithSchedulingWithCronResponseBody() {
        }
        
        public ScanWithSchedulingWithCronResponseBody(CheckmarxTool.CxSDKWebService.CxWSResponseRunID ScanWithSchedulingWithCronResult) {
            this.ScanWithSchedulingWithCronResult = ScanWithSchedulingWithCronResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateScanCommentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateScanComment", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.UpdateScanCommentRequestBody Body;
        
        public UpdateScanCommentRequest() {
        }
        
        public UpdateScanCommentRequest(CheckmarxTool.CxSDKWebService.UpdateScanCommentRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class UpdateScanCommentRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sessionID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long ScanID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Comment;
        
        public UpdateScanCommentRequestBody() {
        }
        
        public UpdateScanCommentRequestBody(string sessionID, long ScanID, string Comment) {
            this.sessionID = sessionID;
            this.ScanID = ScanID;
            this.Comment = Comment;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateScanCommentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateScanCommentResponse", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.UpdateScanCommentResponseBody Body;
        
        public UpdateScanCommentResponse() {
        }
        
        public UpdateScanCommentResponse(CheckmarxTool.CxSDKWebService.UpdateScanCommentResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class UpdateScanCommentResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse UpdateScanCommentResult;
        
        public UpdateScanCommentResponseBody() {
        }
        
        public UpdateScanCommentResponseBody(CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse UpdateScanCommentResult) {
            this.UpdateScanCommentResult = UpdateScanCommentResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPresetListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetPresetList", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.GetPresetListRequestBody Body;
        
        public GetPresetListRequest() {
        }
        
        public GetPresetListRequest(CheckmarxTool.CxSDKWebService.GetPresetListRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class GetPresetListRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string SessionID;
        
        public GetPresetListRequestBody() {
        }
        
        public GetPresetListRequestBody(string SessionID) {
            this.SessionID = SessionID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPresetListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetPresetListResponse", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.GetPresetListResponseBody Body;
        
        public GetPresetListResponse() {
        }
        
        public GetPresetListResponse(CheckmarxTool.CxSDKWebService.GetPresetListResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class GetPresetListResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public CheckmarxTool.CxSDKWebService.CxWSResponsePresetList GetPresetListResult;
        
        public GetPresetListResponseBody() {
        }
        
        public GetPresetListResponseBody(CheckmarxTool.CxSDKWebService.CxWSResponsePresetList GetPresetListResult) {
            this.GetPresetListResult = GetPresetListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetConfigurationSetListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetConfigurationSetList", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.GetConfigurationSetListRequestBody Body;
        
        public GetConfigurationSetListRequest() {
        }
        
        public GetConfigurationSetListRequest(CheckmarxTool.CxSDKWebService.GetConfigurationSetListRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class GetConfigurationSetListRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string SessionID;
        
        public GetConfigurationSetListRequestBody() {
        }
        
        public GetConfigurationSetListRequestBody(string SessionID) {
            this.SessionID = SessionID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetConfigurationSetListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetConfigurationSetListResponse", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.GetConfigurationSetListResponseBody Body;
        
        public GetConfigurationSetListResponse() {
        }
        
        public GetConfigurationSetListResponse(CheckmarxTool.CxSDKWebService.GetConfigurationSetListResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class GetConfigurationSetListResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public CheckmarxTool.CxSDKWebService.CxWSResponseConfigSetList GetConfigurationSetListResult;
        
        public GetConfigurationSetListResponseBody() {
        }
        
        public GetConfigurationSetListResponseBody(CheckmarxTool.CxSDKWebService.CxWSResponseConfigSetList GetConfigurationSetListResult) {
            this.GetConfigurationSetListResult = GetConfigurationSetListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetProjectsDisplayDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetProjectsDisplayData", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.GetProjectsDisplayDataRequestBody Body;
        
        public GetProjectsDisplayDataRequest() {
        }
        
        public GetProjectsDisplayDataRequest(CheckmarxTool.CxSDKWebService.GetProjectsDisplayDataRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class GetProjectsDisplayDataRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sessionID;
        
        public GetProjectsDisplayDataRequestBody() {
        }
        
        public GetProjectsDisplayDataRequestBody(string sessionID) {
            this.sessionID = sessionID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetProjectsDisplayDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetProjectsDisplayDataResponse", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.GetProjectsDisplayDataResponseBody Body;
        
        public GetProjectsDisplayDataResponse() {
        }
        
        public GetProjectsDisplayDataResponse(CheckmarxTool.CxSDKWebService.GetProjectsDisplayDataResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class GetProjectsDisplayDataResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public CheckmarxTool.CxSDKWebService.CxWSResponseProjectsDisplayData GetProjectsDisplayDataResult;
        
        public GetProjectsDisplayDataResponseBody() {
        }
        
        public GetProjectsDisplayDataResponseBody(CheckmarxTool.CxSDKWebService.CxWSResponseProjectsDisplayData GetProjectsDisplayDataResult) {
            this.GetProjectsDisplayDataResult = GetProjectsDisplayDataResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetProjectScannedDisplayDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetProjectScannedDisplayData", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.GetProjectScannedDisplayDataRequestBody Body;
        
        public GetProjectScannedDisplayDataRequest() {
        }
        
        public GetProjectScannedDisplayDataRequest(CheckmarxTool.CxSDKWebService.GetProjectScannedDisplayDataRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class GetProjectScannedDisplayDataRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sessionID;
        
        public GetProjectScannedDisplayDataRequestBody() {
        }
        
        public GetProjectScannedDisplayDataRequestBody(string sessionID) {
            this.sessionID = sessionID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetProjectScannedDisplayDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetProjectScannedDisplayDataResponse", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.GetProjectScannedDisplayDataResponseBody Body;
        
        public GetProjectScannedDisplayDataResponse() {
        }
        
        public GetProjectScannedDisplayDataResponse(CheckmarxTool.CxSDKWebService.GetProjectScannedDisplayDataResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class GetProjectScannedDisplayDataResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public CheckmarxTool.CxSDKWebService.CxWSResponseProjectScannedDisplayData GetProjectScannedDisplayDataResult;
        
        public GetProjectScannedDisplayDataResponseBody() {
        }
        
        public GetProjectScannedDisplayDataResponseBody(CheckmarxTool.CxSDKWebService.CxWSResponseProjectScannedDisplayData GetProjectScannedDisplayDataResult) {
            this.GetProjectScannedDisplayDataResult = GetProjectScannedDisplayDataResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetProjectConfigurationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetProjectConfiguration", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.GetProjectConfigurationRequestBody Body;
        
        public GetProjectConfigurationRequest() {
        }
        
        public GetProjectConfigurationRequest(CheckmarxTool.CxSDKWebService.GetProjectConfigurationRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class GetProjectConfigurationRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sessionID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long projectID;
        
        public GetProjectConfigurationRequestBody() {
        }
        
        public GetProjectConfigurationRequestBody(string sessionID, long projectID) {
            this.sessionID = sessionID;
            this.projectID = projectID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetProjectConfigurationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetProjectConfigurationResponse", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.GetProjectConfigurationResponseBody Body;
        
        public GetProjectConfigurationResponse() {
        }
        
        public GetProjectConfigurationResponse(CheckmarxTool.CxSDKWebService.GetProjectConfigurationResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class GetProjectConfigurationResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public CheckmarxTool.CxSDKWebService.CxWSResponseProjectConfig GetProjectConfigurationResult;
        
        public GetProjectConfigurationResponseBody() {
        }
        
        public GetProjectConfigurationResponseBody(CheckmarxTool.CxSDKWebService.CxWSResponseProjectConfig GetProjectConfigurationResult) {
            this.GetProjectConfigurationResult = GetProjectConfigurationResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateProjectIncrementalConfigurationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateProjectIncrementalConfiguration", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.UpdateProjectIncrementalConfigurationRequestBody Body;
        
        public UpdateProjectIncrementalConfigurationRequest() {
        }
        
        public UpdateProjectIncrementalConfigurationRequest(CheckmarxTool.CxSDKWebService.UpdateProjectIncrementalConfigurationRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class UpdateProjectIncrementalConfigurationRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sessionID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long projectID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public CheckmarxTool.CxSDKWebService.ProjectConfiguration projectConfiguration;
        
        public UpdateProjectIncrementalConfigurationRequestBody() {
        }
        
        public UpdateProjectIncrementalConfigurationRequestBody(string sessionID, long projectID, CheckmarxTool.CxSDKWebService.ProjectConfiguration projectConfiguration) {
            this.sessionID = sessionID;
            this.projectID = projectID;
            this.projectConfiguration = projectConfiguration;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateProjectIncrementalConfigurationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateProjectIncrementalConfigurationResponse", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.UpdateProjectIncrementalConfigurationResponseBody Body;
        
        public UpdateProjectIncrementalConfigurationResponse() {
        }
        
        public UpdateProjectIncrementalConfigurationResponse(CheckmarxTool.CxSDKWebService.UpdateProjectIncrementalConfigurationResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class UpdateProjectIncrementalConfigurationResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse UpdateProjectIncrementalConfigurationResult;
        
        public UpdateProjectIncrementalConfigurationResponseBody() {
        }
        
        public UpdateProjectIncrementalConfigurationResponseBody(CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse UpdateProjectIncrementalConfigurationResult) {
            this.UpdateProjectIncrementalConfigurationResult = UpdateProjectIncrementalConfigurationResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LoginRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Login", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.LoginRequestBody Body;
        
        public LoginRequest() {
        }
        
        public LoginRequest(CheckmarxTool.CxSDKWebService.LoginRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class LoginRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public CheckmarxTool.CxSDKWebService.Credentials applicationCredentials;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int lcid;
        
        public LoginRequestBody() {
        }
        
        public LoginRequestBody(CheckmarxTool.CxSDKWebService.Credentials applicationCredentials, int lcid) {
            this.applicationCredentials = applicationCredentials;
            this.lcid = lcid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LoginResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="LoginResponse", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.LoginResponseBody Body;
        
        public LoginResponse() {
        }
        
        public LoginResponse(CheckmarxTool.CxSDKWebService.LoginResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class LoginResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public CheckmarxTool.CxSDKWebService.CxWSResponseLoginData LoginResult;
        
        public LoginResponseBody() {
        }
        
        public LoginResponseBody(CheckmarxTool.CxSDKWebService.CxWSResponseLoginData LoginResult) {
            this.LoginResult = LoginResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LoginWithTokenRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="LoginWithToken", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.LoginWithTokenRequestBody Body;
        
        public LoginWithTokenRequest() {
        }
        
        public LoginWithTokenRequest(CheckmarxTool.CxSDKWebService.LoginWithTokenRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class LoginWithTokenRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string token;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int lcid;
        
        public LoginWithTokenRequestBody() {
        }
        
        public LoginWithTokenRequestBody(string token, int lcid) {
            this.token = token;
            this.lcid = lcid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LoginWithTokenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="LoginWithTokenResponse", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.LoginWithTokenResponseBody Body;
        
        public LoginWithTokenResponse() {
        }
        
        public LoginWithTokenResponse(CheckmarxTool.CxSDKWebService.LoginWithTokenResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class LoginWithTokenResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public CheckmarxTool.CxSDKWebService.CxWSResponseLoginData LoginWithTokenResult;
        
        public LoginWithTokenResponseBody() {
        }
        
        public LoginWithTokenResponseBody(CheckmarxTool.CxSDKWebService.CxWSResponseLoginData LoginWithTokenResult) {
            this.LoginWithTokenResult = LoginWithTokenResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LogoutRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Logout", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.LogoutRequestBody Body;
        
        public LogoutRequest() {
        }
        
        public LogoutRequest(CheckmarxTool.CxSDKWebService.LogoutRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class LogoutRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sessionID;
        
        public LogoutRequestBody() {
        }
        
        public LogoutRequestBody(string sessionID) {
            this.sessionID = sessionID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class LogoutResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="LogoutResponse", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.LogoutResponseBody Body;
        
        public LogoutResponse() {
        }
        
        public LogoutResponse(CheckmarxTool.CxSDKWebService.LogoutResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class LogoutResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse LogoutResult;
        
        public LogoutResponseBody() {
        }
        
        public LogoutResponseBody(CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse LogoutResult) {
            this.LogoutResult = LogoutResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAssociatedGroupsListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAssociatedGroupsList", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.GetAssociatedGroupsListRequestBody Body;
        
        public GetAssociatedGroupsListRequest() {
        }
        
        public GetAssociatedGroupsListRequest(CheckmarxTool.CxSDKWebService.GetAssociatedGroupsListRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class GetAssociatedGroupsListRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string SessionID;
        
        public GetAssociatedGroupsListRequestBody() {
        }
        
        public GetAssociatedGroupsListRequestBody(string SessionID) {
            this.SessionID = SessionID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAssociatedGroupsListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAssociatedGroupsListResponse", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.GetAssociatedGroupsListResponseBody Body;
        
        public GetAssociatedGroupsListResponse() {
        }
        
        public GetAssociatedGroupsListResponse(CheckmarxTool.CxSDKWebService.GetAssociatedGroupsListResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class GetAssociatedGroupsListResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public CheckmarxTool.CxSDKWebService.CxWSResponseGroupList GetAssociatedGroupsListResult;
        
        public GetAssociatedGroupsListResponseBody() {
        }
        
        public GetAssociatedGroupsListResponseBody(CheckmarxTool.CxSDKWebService.CxWSResponseGroupList GetAssociatedGroupsListResult) {
            this.GetAssociatedGroupsListResult = GetAssociatedGroupsListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetStatusOfSingleScanRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetStatusOfSingleScan", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.GetStatusOfSingleScanRequestBody Body;
        
        public GetStatusOfSingleScanRequest() {
        }
        
        public GetStatusOfSingleScanRequest(CheckmarxTool.CxSDKWebService.GetStatusOfSingleScanRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class GetStatusOfSingleScanRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sessionID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string runId;
        
        public GetStatusOfSingleScanRequestBody() {
        }
        
        public GetStatusOfSingleScanRequestBody(string sessionID, string runId) {
            this.sessionID = sessionID;
            this.runId = runId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetStatusOfSingleScanResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetStatusOfSingleScanResponse", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.GetStatusOfSingleScanResponseBody Body;
        
        public GetStatusOfSingleScanResponse() {
        }
        
        public GetStatusOfSingleScanResponse(CheckmarxTool.CxSDKWebService.GetStatusOfSingleScanResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class GetStatusOfSingleScanResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public CheckmarxTool.CxSDKWebService.CxWSResponseScanStatus GetStatusOfSingleScanResult;
        
        public GetStatusOfSingleScanResponseBody() {
        }
        
        public GetStatusOfSingleScanResponseBody(CheckmarxTool.CxSDKWebService.CxWSResponseScanStatus GetStatusOfSingleScanResult) {
            this.GetStatusOfSingleScanResult = GetStatusOfSingleScanResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetScansDisplayDataForAllProjectsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetScansDisplayDataForAllProjects", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.GetScansDisplayDataForAllProjectsRequestBody Body;
        
        public GetScansDisplayDataForAllProjectsRequest() {
        }
        
        public GetScansDisplayDataForAllProjectsRequest(CheckmarxTool.CxSDKWebService.GetScansDisplayDataForAllProjectsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class GetScansDisplayDataForAllProjectsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sessionID;
        
        public GetScansDisplayDataForAllProjectsRequestBody() {
        }
        
        public GetScansDisplayDataForAllProjectsRequestBody(string sessionID) {
            this.sessionID = sessionID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetScansDisplayDataForAllProjectsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetScansDisplayDataForAllProjectsResponse", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.GetScansDisplayDataForAllProjectsResponseBody Body;
        
        public GetScansDisplayDataForAllProjectsResponse() {
        }
        
        public GetScansDisplayDataForAllProjectsResponse(CheckmarxTool.CxSDKWebService.GetScansDisplayDataForAllProjectsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class GetScansDisplayDataForAllProjectsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public CheckmarxTool.CxSDKWebService.CxWSResponseScansDisplayData GetScansDisplayDataForAllProjectsResult;
        
        public GetScansDisplayDataForAllProjectsResponseBody() {
        }
        
        public GetScansDisplayDataForAllProjectsResponseBody(CheckmarxTool.CxSDKWebService.CxWSResponseScansDisplayData GetScansDisplayDataForAllProjectsResult) {
            this.GetScansDisplayDataForAllProjectsResult = GetScansDisplayDataForAllProjectsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetScanSummaryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetScanSummary", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.GetScanSummaryRequestBody Body;
        
        public GetScanSummaryRequest() {
        }
        
        public GetScanSummaryRequest(CheckmarxTool.CxSDKWebService.GetScanSummaryRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class GetScanSummaryRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string SessionID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long ScanID;
        
        public GetScanSummaryRequestBody() {
        }
        
        public GetScanSummaryRequestBody(string SessionID, long ScanID) {
            this.SessionID = SessionID;
            this.ScanID = ScanID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetScanSummaryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetScanSummaryResponse", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.GetScanSummaryResponseBody Body;
        
        public GetScanSummaryResponse() {
        }
        
        public GetScanSummaryResponse(CheckmarxTool.CxSDKWebService.GetScanSummaryResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class GetScanSummaryResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public CheckmarxTool.CxSDKWebService.CxWSResponseScanSummary GetScanSummaryResult;
        
        public GetScanSummaryResponseBody() {
        }
        
        public GetScanSummaryResponseBody(CheckmarxTool.CxSDKWebService.CxWSResponseScanSummary GetScanSummaryResult) {
            this.GetScanSummaryResult = GetScanSummaryResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateProjectConfigurationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateProjectConfiguration", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.UpdateProjectConfigurationRequestBody Body;
        
        public UpdateProjectConfigurationRequest() {
        }
        
        public UpdateProjectConfigurationRequest(CheckmarxTool.CxSDKWebService.UpdateProjectConfigurationRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class UpdateProjectConfigurationRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sessionID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long projectID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public CheckmarxTool.CxSDKWebService.ProjectConfiguration projectConfiguration;
        
        public UpdateProjectConfigurationRequestBody() {
        }
        
        public UpdateProjectConfigurationRequestBody(string sessionID, long projectID, CheckmarxTool.CxSDKWebService.ProjectConfiguration projectConfiguration) {
            this.sessionID = sessionID;
            this.projectID = projectID;
            this.projectConfiguration = projectConfiguration;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateProjectConfigurationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UpdateProjectConfigurationResponse", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.UpdateProjectConfigurationResponseBody Body;
        
        public UpdateProjectConfigurationResponse() {
        }
        
        public UpdateProjectConfigurationResponse(CheckmarxTool.CxSDKWebService.UpdateProjectConfigurationResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class UpdateProjectConfigurationResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse UpdateProjectConfigurationResult;
        
        public UpdateProjectConfigurationResponseBody() {
        }
        
        public UpdateProjectConfigurationResponseBody(CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse UpdateProjectConfigurationResult) {
            this.UpdateProjectConfigurationResult = UpdateProjectConfigurationResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteUserRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DeleteUser", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.DeleteUserRequestBody Body;
        
        public DeleteUserRequest() {
        }
        
        public DeleteUserRequest(CheckmarxTool.CxSDKWebService.DeleteUserRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class DeleteUserRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sessionID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int userID;
        
        public DeleteUserRequestBody() {
        }
        
        public DeleteUserRequestBody(string sessionID, int userID) {
            this.sessionID = sessionID;
            this.userID = userID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteUserResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DeleteUserResponse", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.DeleteUserResponseBody Body;
        
        public DeleteUserResponse() {
        }
        
        public DeleteUserResponse(CheckmarxTool.CxSDKWebService.DeleteUserResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class DeleteUserResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse DeleteUserResult;
        
        public DeleteUserResponseBody() {
        }
        
        public DeleteUserResponseBody(CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse DeleteUserResult) {
            this.DeleteUserResult = DeleteUserResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAllUsersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAllUsers", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.GetAllUsersRequestBody Body;
        
        public GetAllUsersRequest() {
        }
        
        public GetAllUsersRequest(CheckmarxTool.CxSDKWebService.GetAllUsersRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class GetAllUsersRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sessionID;
        
        public GetAllUsersRequestBody() {
        }
        
        public GetAllUsersRequestBody(string sessionID) {
            this.sessionID = sessionID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAllUsersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAllUsersResponse", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.GetAllUsersResponseBody Body;
        
        public GetAllUsersResponse() {
        }
        
        public GetAllUsersResponse(CheckmarxTool.CxSDKWebService.GetAllUsersResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class GetAllUsersResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public CheckmarxTool.CxSDKWebService.CxWSResponseUserData GetAllUsersResult;
        
        public GetAllUsersResponseBody() {
        }
        
        public GetAllUsersResponseBody(CheckmarxTool.CxSDKWebService.CxWSResponseUserData GetAllUsersResult) {
            this.GetAllUsersResult = GetAllUsersResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateScanReportRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateScanReport", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.CreateScanReportRequestBody Body;
        
        public CreateScanReportRequest() {
        }
        
        public CreateScanReportRequest(CheckmarxTool.CxSDKWebService.CreateScanReportRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class CreateScanReportRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sessionID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public CheckmarxTool.CxSDKWebService.CxWSReportRequest reportRequest;
        
        public CreateScanReportRequestBody() {
        }
        
        public CreateScanReportRequestBody(string sessionID, CheckmarxTool.CxSDKWebService.CxWSReportRequest reportRequest) {
            this.sessionID = sessionID;
            this.reportRequest = reportRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class CreateScanReportResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="CreateScanReportResponse", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.CreateScanReportResponseBody Body;
        
        public CreateScanReportResponse() {
        }
        
        public CreateScanReportResponse(CheckmarxTool.CxSDKWebService.CreateScanReportResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class CreateScanReportResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public CheckmarxTool.CxSDKWebService.CxWSCreateReportResponse CreateScanReportResult;
        
        public CreateScanReportResponseBody() {
        }
        
        public CreateScanReportResponseBody(CheckmarxTool.CxSDKWebService.CxWSCreateReportResponse CreateScanReportResult) {
            this.CreateScanReportResult = CreateScanReportResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetScanReportStatusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetScanReportStatus", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.GetScanReportStatusRequestBody Body;
        
        public GetScanReportStatusRequest() {
        }
        
        public GetScanReportStatusRequest(CheckmarxTool.CxSDKWebService.GetScanReportStatusRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class GetScanReportStatusRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string SessionID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long ReportID;
        
        public GetScanReportStatusRequestBody() {
        }
        
        public GetScanReportStatusRequestBody(string SessionID, long ReportID) {
            this.SessionID = SessionID;
            this.ReportID = ReportID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetScanReportStatusResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetScanReportStatusResponse", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.GetScanReportStatusResponseBody Body;
        
        public GetScanReportStatusResponse() {
        }
        
        public GetScanReportStatusResponse(CheckmarxTool.CxSDKWebService.GetScanReportStatusResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class GetScanReportStatusResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public CheckmarxTool.CxSDKWebService.CxWSReportStatusResponse GetScanReportStatusResult;
        
        public GetScanReportStatusResponseBody() {
        }
        
        public GetScanReportStatusResponseBody(CheckmarxTool.CxSDKWebService.CxWSReportStatusResponse GetScanReportStatusResult) {
            this.GetScanReportStatusResult = GetScanReportStatusResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetScanReportRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetScanReport", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.GetScanReportRequestBody Body;
        
        public GetScanReportRequest() {
        }
        
        public GetScanReportRequest(CheckmarxTool.CxSDKWebService.GetScanReportRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class GetScanReportRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string SessionID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long ReportID;
        
        public GetScanReportRequestBody() {
        }
        
        public GetScanReportRequestBody(string SessionID, long ReportID) {
            this.SessionID = SessionID;
            this.ReportID = ReportID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetScanReportResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetScanReportResponse", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.GetScanReportResponseBody Body;
        
        public GetScanReportResponse() {
        }
        
        public GetScanReportResponse(CheckmarxTool.CxSDKWebService.GetScanReportResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class GetScanReportResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public CheckmarxTool.CxSDKWebService.CxWSResponseScanResults GetScanReportResult;
        
        public GetScanReportResponseBody() {
        }
        
        public GetScanReportResponseBody(CheckmarxTool.CxSDKWebService.CxWSResponseScanResults GetScanReportResult) {
            this.GetScanReportResult = GetScanReportResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ExecuteDataRetentionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ExecuteDataRetention", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.ExecuteDataRetentionRequestBody Body;
        
        public ExecuteDataRetentionRequest() {
        }
        
        public ExecuteDataRetentionRequest(CheckmarxTool.CxSDKWebService.ExecuteDataRetentionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class ExecuteDataRetentionRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string SessionID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public CheckmarxTool.CxSDKWebService.CxDataRetentionConfiguration dataRetentionConfiguration;
        
        public ExecuteDataRetentionRequestBody() {
        }
        
        public ExecuteDataRetentionRequestBody(string SessionID, CheckmarxTool.CxSDKWebService.CxDataRetentionConfiguration dataRetentionConfiguration) {
            this.SessionID = SessionID;
            this.dataRetentionConfiguration = dataRetentionConfiguration;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ExecuteDataRetentionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ExecuteDataRetentionResponse", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.ExecuteDataRetentionResponseBody Body;
        
        public ExecuteDataRetentionResponse() {
        }
        
        public ExecuteDataRetentionResponse(CheckmarxTool.CxSDKWebService.ExecuteDataRetentionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class ExecuteDataRetentionResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse ExecuteDataRetentionResult;
        
        public ExecuteDataRetentionResponseBody() {
        }
        
        public ExecuteDataRetentionResponseBody(CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse ExecuteDataRetentionResult) {
            this.ExecuteDataRetentionResult = ExecuteDataRetentionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class StopDataRetentionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="StopDataRetention", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.StopDataRetentionRequestBody Body;
        
        public StopDataRetentionRequest() {
        }
        
        public StopDataRetentionRequest(CheckmarxTool.CxSDKWebService.StopDataRetentionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class StopDataRetentionRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string SessionID;
        
        public StopDataRetentionRequestBody() {
        }
        
        public StopDataRetentionRequestBody(string SessionID) {
            this.SessionID = SessionID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class StopDataRetentionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="StopDataRetentionResponse", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.StopDataRetentionResponseBody Body;
        
        public StopDataRetentionResponse() {
        }
        
        public StopDataRetentionResponse(CheckmarxTool.CxSDKWebService.StopDataRetentionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class StopDataRetentionResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse StopDataRetentionResult;
        
        public StopDataRetentionResponseBody() {
        }
        
        public StopDataRetentionResponseBody(CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse StopDataRetentionResult) {
            this.StopDataRetentionResult = StopDataRetentionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTeamLdapGroupsMappingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTeamLdapGroupsMapping", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.GetTeamLdapGroupsMappingRequestBody Body;
        
        public GetTeamLdapGroupsMappingRequest() {
        }
        
        public GetTeamLdapGroupsMappingRequest(CheckmarxTool.CxSDKWebService.GetTeamLdapGroupsMappingRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class GetTeamLdapGroupsMappingRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sessionId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string teamId;
        
        public GetTeamLdapGroupsMappingRequestBody() {
        }
        
        public GetTeamLdapGroupsMappingRequestBody(string sessionId, string teamId) {
            this.sessionId = sessionId;
            this.teamId = teamId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetTeamLdapGroupsMappingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetTeamLdapGroupsMappingResponse", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.GetTeamLdapGroupsMappingResponseBody Body;
        
        public GetTeamLdapGroupsMappingResponse() {
        }
        
        public GetTeamLdapGroupsMappingResponse(CheckmarxTool.CxSDKWebService.GetTeamLdapGroupsMappingResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class GetTeamLdapGroupsMappingResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public CheckmarxTool.CxSDKWebService.CxWSResponseTeamLdapGroupMappingData GetTeamLdapGroupsMappingResult;
        
        public GetTeamLdapGroupsMappingResponseBody() {
        }
        
        public GetTeamLdapGroupsMappingResponseBody(CheckmarxTool.CxSDKWebService.CxWSResponseTeamLdapGroupMappingData GetTeamLdapGroupsMappingResult) {
            this.GetTeamLdapGroupsMappingResult = GetTeamLdapGroupsMappingResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SetTeamLdapGroupsMappingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SetTeamLdapGroupsMapping", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.SetTeamLdapGroupsMappingRequestBody Body;
        
        public SetTeamLdapGroupsMappingRequest() {
        }
        
        public SetTeamLdapGroupsMappingRequest(CheckmarxTool.CxSDKWebService.SetTeamLdapGroupsMappingRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class SetTeamLdapGroupsMappingRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string sessionId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string teamId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public CheckmarxTool.CxSDKWebService.CxWSLdapGroupMapping[] ldapGroups;
        
        public SetTeamLdapGroupsMappingRequestBody() {
        }
        
        public SetTeamLdapGroupsMappingRequestBody(string sessionId, string teamId, CheckmarxTool.CxSDKWebService.CxWSLdapGroupMapping[] ldapGroups) {
            this.sessionId = sessionId;
            this.teamId = teamId;
            this.ldapGroups = ldapGroups;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SetTeamLdapGroupsMappingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SetTeamLdapGroupsMappingResponse", Namespace="http://Checkmarx.com/v7", Order=0)]
        public CheckmarxTool.CxSDKWebService.SetTeamLdapGroupsMappingResponseBody Body;
        
        public SetTeamLdapGroupsMappingResponse() {
        }
        
        public SetTeamLdapGroupsMappingResponse(CheckmarxTool.CxSDKWebService.SetTeamLdapGroupsMappingResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com/v7")]
    public partial class SetTeamLdapGroupsMappingResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse SetTeamLdapGroupsMappingResult;
        
        public SetTeamLdapGroupsMappingResponseBody() {
        }
        
        public SetTeamLdapGroupsMappingResponseBody(CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse SetTeamLdapGroupsMappingResult) {
            this.SetTeamLdapGroupsMappingResult = SetTeamLdapGroupsMappingResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CxSDKWebServiceSoapChannel : CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CxSDKWebServiceSoapClient : System.ServiceModel.ClientBase<CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap>, CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap {
        
        public CxSDKWebServiceSoapClient() {
        }
        
        public CxSDKWebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CxSDKWebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CxSDKWebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CxSDKWebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CheckmarxTool.CxSDKWebService.ScanResponse CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.Scan(CheckmarxTool.CxSDKWebService.ScanRequest request) {
            return base.Channel.Scan(request);
        }
        
        public CheckmarxTool.CxSDKWebService.CxWSResponseRunID Scan(string sessionId, CheckmarxTool.CxSDKWebService.CliScanArgs args) {
            CheckmarxTool.CxSDKWebService.ScanRequest inValue = new CheckmarxTool.CxSDKWebService.ScanRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.ScanRequestBody();
            inValue.Body.sessionId = sessionId;
            inValue.Body.args = args;
            CheckmarxTool.CxSDKWebService.ScanResponse retVal = ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).Scan(inValue);
            return retVal.Body.ScanResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.ScanResponse> CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.ScanAsync(CheckmarxTool.CxSDKWebService.ScanRequest request) {
            return base.Channel.ScanAsync(request);
        }
        
        public System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.ScanResponse> ScanAsync(string sessionId, CheckmarxTool.CxSDKWebService.CliScanArgs args) {
            CheckmarxTool.CxSDKWebService.ScanRequest inValue = new CheckmarxTool.CxSDKWebService.ScanRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.ScanRequestBody();
            inValue.Body.sessionId = sessionId;
            inValue.Body.args = args;
            return ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).ScanAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CheckmarxTool.CxSDKWebService.BranchProjectByIdResponse CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.BranchProjectById(CheckmarxTool.CxSDKWebService.BranchProjectByIdRequest request) {
            return base.Channel.BranchProjectById(request);
        }
        
        public CheckmarxTool.CxSDKWebService.CxWSResponseRunID BranchProjectById(string sessionId, long originProjectId, string newBranchProjectName) {
            CheckmarxTool.CxSDKWebService.BranchProjectByIdRequest inValue = new CheckmarxTool.CxSDKWebService.BranchProjectByIdRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.BranchProjectByIdRequestBody();
            inValue.Body.sessionId = sessionId;
            inValue.Body.originProjectId = originProjectId;
            inValue.Body.newBranchProjectName = newBranchProjectName;
            CheckmarxTool.CxSDKWebService.BranchProjectByIdResponse retVal = ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).BranchProjectById(inValue);
            return retVal.Body.BranchProjectByIdResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.BranchProjectByIdResponse> CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.BranchProjectByIdAsync(CheckmarxTool.CxSDKWebService.BranchProjectByIdRequest request) {
            return base.Channel.BranchProjectByIdAsync(request);
        }
        
        public System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.BranchProjectByIdResponse> BranchProjectByIdAsync(string sessionId, long originProjectId, string newBranchProjectName) {
            CheckmarxTool.CxSDKWebService.BranchProjectByIdRequest inValue = new CheckmarxTool.CxSDKWebService.BranchProjectByIdRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.BranchProjectByIdRequestBody();
            inValue.Body.sessionId = sessionId;
            inValue.Body.originProjectId = originProjectId;
            inValue.Body.newBranchProjectName = newBranchProjectName;
            return ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).BranchProjectByIdAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CheckmarxTool.CxSDKWebService.ScanWithOriginNameResponse CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.ScanWithOriginName(CheckmarxTool.CxSDKWebService.ScanWithOriginNameRequest request) {
            return base.Channel.ScanWithOriginName(request);
        }
        
        public CheckmarxTool.CxSDKWebService.CxWSResponseRunID ScanWithOriginName(string sessionId, CheckmarxTool.CxSDKWebService.CliScanArgs args, string origName) {
            CheckmarxTool.CxSDKWebService.ScanWithOriginNameRequest inValue = new CheckmarxTool.CxSDKWebService.ScanWithOriginNameRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.ScanWithOriginNameRequestBody();
            inValue.Body.sessionId = sessionId;
            inValue.Body.args = args;
            inValue.Body.origName = origName;
            CheckmarxTool.CxSDKWebService.ScanWithOriginNameResponse retVal = ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).ScanWithOriginName(inValue);
            return retVal.Body.ScanWithOriginNameResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.ScanWithOriginNameResponse> CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.ScanWithOriginNameAsync(CheckmarxTool.CxSDKWebService.ScanWithOriginNameRequest request) {
            return base.Channel.ScanWithOriginNameAsync(request);
        }
        
        public System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.ScanWithOriginNameResponse> ScanWithOriginNameAsync(string sessionId, CheckmarxTool.CxSDKWebService.CliScanArgs args, string origName) {
            CheckmarxTool.CxSDKWebService.ScanWithOriginNameRequest inValue = new CheckmarxTool.CxSDKWebService.ScanWithOriginNameRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.ScanWithOriginNameRequestBody();
            inValue.Body.sessionId = sessionId;
            inValue.Body.args = args;
            inValue.Body.origName = origName;
            return ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).ScanWithOriginNameAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CheckmarxTool.CxSDKWebService.CancelScanResponse CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.CancelScan(CheckmarxTool.CxSDKWebService.CancelScanRequest request) {
            return base.Channel.CancelScan(request);
        }
        
        public CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse CancelScan(string sessionID, string RunId) {
            CheckmarxTool.CxSDKWebService.CancelScanRequest inValue = new CheckmarxTool.CxSDKWebService.CancelScanRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.CancelScanRequestBody();
            inValue.Body.sessionID = sessionID;
            inValue.Body.RunId = RunId;
            CheckmarxTool.CxSDKWebService.CancelScanResponse retVal = ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).CancelScan(inValue);
            return retVal.Body.CancelScanResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.CancelScanResponse> CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.CancelScanAsync(CheckmarxTool.CxSDKWebService.CancelScanRequest request) {
            return base.Channel.CancelScanAsync(request);
        }
        
        public System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.CancelScanResponse> CancelScanAsync(string sessionID, string RunId) {
            CheckmarxTool.CxSDKWebService.CancelScanRequest inValue = new CheckmarxTool.CxSDKWebService.CancelScanRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.CancelScanRequestBody();
            inValue.Body.sessionID = sessionID;
            inValue.Body.RunId = RunId;
            return ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).CancelScanAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CheckmarxTool.CxSDKWebService.DeleteProjectsResponse CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.DeleteProjects(CheckmarxTool.CxSDKWebService.DeleteProjectsRequest request) {
            return base.Channel.DeleteProjects(request);
        }
        
        public CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse DeleteProjects(string sessionID, CheckmarxTool.CxSDKWebService.ArrayOfLong projectIDs) {
            CheckmarxTool.CxSDKWebService.DeleteProjectsRequest inValue = new CheckmarxTool.CxSDKWebService.DeleteProjectsRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.DeleteProjectsRequestBody();
            inValue.Body.sessionID = sessionID;
            inValue.Body.projectIDs = projectIDs;
            CheckmarxTool.CxSDKWebService.DeleteProjectsResponse retVal = ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).DeleteProjects(inValue);
            return retVal.Body.DeleteProjectsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.DeleteProjectsResponse> CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.DeleteProjectsAsync(CheckmarxTool.CxSDKWebService.DeleteProjectsRequest request) {
            return base.Channel.DeleteProjectsAsync(request);
        }
        
        public System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.DeleteProjectsResponse> DeleteProjectsAsync(string sessionID, CheckmarxTool.CxSDKWebService.ArrayOfLong projectIDs) {
            CheckmarxTool.CxSDKWebService.DeleteProjectsRequest inValue = new CheckmarxTool.CxSDKWebService.DeleteProjectsRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.DeleteProjectsRequestBody();
            inValue.Body.sessionID = sessionID;
            inValue.Body.projectIDs = projectIDs;
            return ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).DeleteProjectsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CheckmarxTool.CxSDKWebService.DeleteScansResponse CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.DeleteScans(CheckmarxTool.CxSDKWebService.DeleteScansRequest request) {
            return base.Channel.DeleteScans(request);
        }
        
        public CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse DeleteScans(string sessionID, CheckmarxTool.CxSDKWebService.ArrayOfLong scanIDs) {
            CheckmarxTool.CxSDKWebService.DeleteScansRequest inValue = new CheckmarxTool.CxSDKWebService.DeleteScansRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.DeleteScansRequestBody();
            inValue.Body.sessionID = sessionID;
            inValue.Body.scanIDs = scanIDs;
            CheckmarxTool.CxSDKWebService.DeleteScansResponse retVal = ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).DeleteScans(inValue);
            return retVal.Body.DeleteScansResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.DeleteScansResponse> CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.DeleteScansAsync(CheckmarxTool.CxSDKWebService.DeleteScansRequest request) {
            return base.Channel.DeleteScansAsync(request);
        }
        
        public System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.DeleteScansResponse> DeleteScansAsync(string sessionID, CheckmarxTool.CxSDKWebService.ArrayOfLong scanIDs) {
            CheckmarxTool.CxSDKWebService.DeleteScansRequest inValue = new CheckmarxTool.CxSDKWebService.DeleteScansRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.DeleteScansRequestBody();
            inValue.Body.sessionID = sessionID;
            inValue.Body.scanIDs = scanIDs;
            return ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).DeleteScansAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CheckmarxTool.CxSDKWebService.ScanWithSchedulingResponse CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.ScanWithScheduling(CheckmarxTool.CxSDKWebService.ScanWithSchedulingRequest request) {
            return base.Channel.ScanWithScheduling(request);
        }
        
        public CheckmarxTool.CxSDKWebService.CxWSResponseRunID ScanWithScheduling(string sessionId, CheckmarxTool.CxSDKWebService.CliScanArgs args, string schedulingData) {
            CheckmarxTool.CxSDKWebService.ScanWithSchedulingRequest inValue = new CheckmarxTool.CxSDKWebService.ScanWithSchedulingRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.ScanWithSchedulingRequestBody();
            inValue.Body.sessionId = sessionId;
            inValue.Body.args = args;
            inValue.Body.schedulingData = schedulingData;
            CheckmarxTool.CxSDKWebService.ScanWithSchedulingResponse retVal = ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).ScanWithScheduling(inValue);
            return retVal.Body.ScanWithSchedulingResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.ScanWithSchedulingResponse> CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.ScanWithSchedulingAsync(CheckmarxTool.CxSDKWebService.ScanWithSchedulingRequest request) {
            return base.Channel.ScanWithSchedulingAsync(request);
        }
        
        public System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.ScanWithSchedulingResponse> ScanWithSchedulingAsync(string sessionId, CheckmarxTool.CxSDKWebService.CliScanArgs args, string schedulingData) {
            CheckmarxTool.CxSDKWebService.ScanWithSchedulingRequest inValue = new CheckmarxTool.CxSDKWebService.ScanWithSchedulingRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.ScanWithSchedulingRequestBody();
            inValue.Body.sessionId = sessionId;
            inValue.Body.args = args;
            inValue.Body.schedulingData = schedulingData;
            return ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).ScanWithSchedulingAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CheckmarxTool.CxSDKWebService.ScanWithSchedulingWithCronResponse CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.ScanWithSchedulingWithCron(CheckmarxTool.CxSDKWebService.ScanWithSchedulingWithCronRequest request) {
            return base.Channel.ScanWithSchedulingWithCron(request);
        }
        
        public CheckmarxTool.CxSDKWebService.CxWSResponseRunID ScanWithSchedulingWithCron(string sessionId, CheckmarxTool.CxSDKWebService.CliScanArgs args, string cronString, long utcEpochStartTime, long utcEpochEndTime) {
            CheckmarxTool.CxSDKWebService.ScanWithSchedulingWithCronRequest inValue = new CheckmarxTool.CxSDKWebService.ScanWithSchedulingWithCronRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.ScanWithSchedulingWithCronRequestBody();
            inValue.Body.sessionId = sessionId;
            inValue.Body.args = args;
            inValue.Body.cronString = cronString;
            inValue.Body.utcEpochStartTime = utcEpochStartTime;
            inValue.Body.utcEpochEndTime = utcEpochEndTime;
            CheckmarxTool.CxSDKWebService.ScanWithSchedulingWithCronResponse retVal = ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).ScanWithSchedulingWithCron(inValue);
            return retVal.Body.ScanWithSchedulingWithCronResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.ScanWithSchedulingWithCronResponse> CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.ScanWithSchedulingWithCronAsync(CheckmarxTool.CxSDKWebService.ScanWithSchedulingWithCronRequest request) {
            return base.Channel.ScanWithSchedulingWithCronAsync(request);
        }
        
        public System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.ScanWithSchedulingWithCronResponse> ScanWithSchedulingWithCronAsync(string sessionId, CheckmarxTool.CxSDKWebService.CliScanArgs args, string cronString, long utcEpochStartTime, long utcEpochEndTime) {
            CheckmarxTool.CxSDKWebService.ScanWithSchedulingWithCronRequest inValue = new CheckmarxTool.CxSDKWebService.ScanWithSchedulingWithCronRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.ScanWithSchedulingWithCronRequestBody();
            inValue.Body.sessionId = sessionId;
            inValue.Body.args = args;
            inValue.Body.cronString = cronString;
            inValue.Body.utcEpochStartTime = utcEpochStartTime;
            inValue.Body.utcEpochEndTime = utcEpochEndTime;
            return ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).ScanWithSchedulingWithCronAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CheckmarxTool.CxSDKWebService.UpdateScanCommentResponse CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.UpdateScanComment(CheckmarxTool.CxSDKWebService.UpdateScanCommentRequest request) {
            return base.Channel.UpdateScanComment(request);
        }
        
        public CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse UpdateScanComment(string sessionID, long ScanID, string Comment) {
            CheckmarxTool.CxSDKWebService.UpdateScanCommentRequest inValue = new CheckmarxTool.CxSDKWebService.UpdateScanCommentRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.UpdateScanCommentRequestBody();
            inValue.Body.sessionID = sessionID;
            inValue.Body.ScanID = ScanID;
            inValue.Body.Comment = Comment;
            CheckmarxTool.CxSDKWebService.UpdateScanCommentResponse retVal = ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).UpdateScanComment(inValue);
            return retVal.Body.UpdateScanCommentResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.UpdateScanCommentResponse> CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.UpdateScanCommentAsync(CheckmarxTool.CxSDKWebService.UpdateScanCommentRequest request) {
            return base.Channel.UpdateScanCommentAsync(request);
        }
        
        public System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.UpdateScanCommentResponse> UpdateScanCommentAsync(string sessionID, long ScanID, string Comment) {
            CheckmarxTool.CxSDKWebService.UpdateScanCommentRequest inValue = new CheckmarxTool.CxSDKWebService.UpdateScanCommentRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.UpdateScanCommentRequestBody();
            inValue.Body.sessionID = sessionID;
            inValue.Body.ScanID = ScanID;
            inValue.Body.Comment = Comment;
            return ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).UpdateScanCommentAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CheckmarxTool.CxSDKWebService.GetPresetListResponse CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.GetPresetList(CheckmarxTool.CxSDKWebService.GetPresetListRequest request) {
            return base.Channel.GetPresetList(request);
        }
        
        public CheckmarxTool.CxSDKWebService.CxWSResponsePresetList GetPresetList(string SessionID) {
            CheckmarxTool.CxSDKWebService.GetPresetListRequest inValue = new CheckmarxTool.CxSDKWebService.GetPresetListRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.GetPresetListRequestBody();
            inValue.Body.SessionID = SessionID;
            CheckmarxTool.CxSDKWebService.GetPresetListResponse retVal = ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).GetPresetList(inValue);
            return retVal.Body.GetPresetListResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetPresetListResponse> CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.GetPresetListAsync(CheckmarxTool.CxSDKWebService.GetPresetListRequest request) {
            return base.Channel.GetPresetListAsync(request);
        }
        
        public System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetPresetListResponse> GetPresetListAsync(string SessionID) {
            CheckmarxTool.CxSDKWebService.GetPresetListRequest inValue = new CheckmarxTool.CxSDKWebService.GetPresetListRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.GetPresetListRequestBody();
            inValue.Body.SessionID = SessionID;
            return ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).GetPresetListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CheckmarxTool.CxSDKWebService.GetConfigurationSetListResponse CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.GetConfigurationSetList(CheckmarxTool.CxSDKWebService.GetConfigurationSetListRequest request) {
            return base.Channel.GetConfigurationSetList(request);
        }
        
        public CheckmarxTool.CxSDKWebService.CxWSResponseConfigSetList GetConfigurationSetList(string SessionID) {
            CheckmarxTool.CxSDKWebService.GetConfigurationSetListRequest inValue = new CheckmarxTool.CxSDKWebService.GetConfigurationSetListRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.GetConfigurationSetListRequestBody();
            inValue.Body.SessionID = SessionID;
            CheckmarxTool.CxSDKWebService.GetConfigurationSetListResponse retVal = ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).GetConfigurationSetList(inValue);
            return retVal.Body.GetConfigurationSetListResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetConfigurationSetListResponse> CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.GetConfigurationSetListAsync(CheckmarxTool.CxSDKWebService.GetConfigurationSetListRequest request) {
            return base.Channel.GetConfigurationSetListAsync(request);
        }
        
        public System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetConfigurationSetListResponse> GetConfigurationSetListAsync(string SessionID) {
            CheckmarxTool.CxSDKWebService.GetConfigurationSetListRequest inValue = new CheckmarxTool.CxSDKWebService.GetConfigurationSetListRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.GetConfigurationSetListRequestBody();
            inValue.Body.SessionID = SessionID;
            return ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).GetConfigurationSetListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CheckmarxTool.CxSDKWebService.GetProjectsDisplayDataResponse CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.GetProjectsDisplayData(CheckmarxTool.CxSDKWebService.GetProjectsDisplayDataRequest request) {
            return base.Channel.GetProjectsDisplayData(request);
        }
        
        public CheckmarxTool.CxSDKWebService.CxWSResponseProjectsDisplayData GetProjectsDisplayData(string sessionID) {
            CheckmarxTool.CxSDKWebService.GetProjectsDisplayDataRequest inValue = new CheckmarxTool.CxSDKWebService.GetProjectsDisplayDataRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.GetProjectsDisplayDataRequestBody();
            inValue.Body.sessionID = sessionID;
            CheckmarxTool.CxSDKWebService.GetProjectsDisplayDataResponse retVal = ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).GetProjectsDisplayData(inValue);
            return retVal.Body.GetProjectsDisplayDataResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetProjectsDisplayDataResponse> CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.GetProjectsDisplayDataAsync(CheckmarxTool.CxSDKWebService.GetProjectsDisplayDataRequest request) {
            return base.Channel.GetProjectsDisplayDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetProjectsDisplayDataResponse> GetProjectsDisplayDataAsync(string sessionID) {
            CheckmarxTool.CxSDKWebService.GetProjectsDisplayDataRequest inValue = new CheckmarxTool.CxSDKWebService.GetProjectsDisplayDataRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.GetProjectsDisplayDataRequestBody();
            inValue.Body.sessionID = sessionID;
            return ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).GetProjectsDisplayDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CheckmarxTool.CxSDKWebService.GetProjectScannedDisplayDataResponse CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.GetProjectScannedDisplayData(CheckmarxTool.CxSDKWebService.GetProjectScannedDisplayDataRequest request) {
            return base.Channel.GetProjectScannedDisplayData(request);
        }
        
        public CheckmarxTool.CxSDKWebService.CxWSResponseProjectScannedDisplayData GetProjectScannedDisplayData(string sessionID) {
            CheckmarxTool.CxSDKWebService.GetProjectScannedDisplayDataRequest inValue = new CheckmarxTool.CxSDKWebService.GetProjectScannedDisplayDataRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.GetProjectScannedDisplayDataRequestBody();
            inValue.Body.sessionID = sessionID;
            CheckmarxTool.CxSDKWebService.GetProjectScannedDisplayDataResponse retVal = ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).GetProjectScannedDisplayData(inValue);
            return retVal.Body.GetProjectScannedDisplayDataResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetProjectScannedDisplayDataResponse> CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.GetProjectScannedDisplayDataAsync(CheckmarxTool.CxSDKWebService.GetProjectScannedDisplayDataRequest request) {
            return base.Channel.GetProjectScannedDisplayDataAsync(request);
        }
        
        public System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetProjectScannedDisplayDataResponse> GetProjectScannedDisplayDataAsync(string sessionID) {
            CheckmarxTool.CxSDKWebService.GetProjectScannedDisplayDataRequest inValue = new CheckmarxTool.CxSDKWebService.GetProjectScannedDisplayDataRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.GetProjectScannedDisplayDataRequestBody();
            inValue.Body.sessionID = sessionID;
            return ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).GetProjectScannedDisplayDataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CheckmarxTool.CxSDKWebService.GetProjectConfigurationResponse CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.GetProjectConfiguration(CheckmarxTool.CxSDKWebService.GetProjectConfigurationRequest request) {
            return base.Channel.GetProjectConfiguration(request);
        }
        
        public CheckmarxTool.CxSDKWebService.CxWSResponseProjectConfig GetProjectConfiguration(string sessionID, long projectID) {
            CheckmarxTool.CxSDKWebService.GetProjectConfigurationRequest inValue = new CheckmarxTool.CxSDKWebService.GetProjectConfigurationRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.GetProjectConfigurationRequestBody();
            inValue.Body.sessionID = sessionID;
            inValue.Body.projectID = projectID;
            CheckmarxTool.CxSDKWebService.GetProjectConfigurationResponse retVal = ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).GetProjectConfiguration(inValue);
            return retVal.Body.GetProjectConfigurationResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetProjectConfigurationResponse> CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.GetProjectConfigurationAsync(CheckmarxTool.CxSDKWebService.GetProjectConfigurationRequest request) {
            return base.Channel.GetProjectConfigurationAsync(request);
        }
        
        public System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetProjectConfigurationResponse> GetProjectConfigurationAsync(string sessionID, long projectID) {
            CheckmarxTool.CxSDKWebService.GetProjectConfigurationRequest inValue = new CheckmarxTool.CxSDKWebService.GetProjectConfigurationRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.GetProjectConfigurationRequestBody();
            inValue.Body.sessionID = sessionID;
            inValue.Body.projectID = projectID;
            return ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).GetProjectConfigurationAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CheckmarxTool.CxSDKWebService.UpdateProjectIncrementalConfigurationResponse CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.UpdateProjectIncrementalConfiguration(CheckmarxTool.CxSDKWebService.UpdateProjectIncrementalConfigurationRequest request) {
            return base.Channel.UpdateProjectIncrementalConfiguration(request);
        }
        
        public CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse UpdateProjectIncrementalConfiguration(string sessionID, long projectID, CheckmarxTool.CxSDKWebService.ProjectConfiguration projectConfiguration) {
            CheckmarxTool.CxSDKWebService.UpdateProjectIncrementalConfigurationRequest inValue = new CheckmarxTool.CxSDKWebService.UpdateProjectIncrementalConfigurationRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.UpdateProjectIncrementalConfigurationRequestBody();
            inValue.Body.sessionID = sessionID;
            inValue.Body.projectID = projectID;
            inValue.Body.projectConfiguration = projectConfiguration;
            CheckmarxTool.CxSDKWebService.UpdateProjectIncrementalConfigurationResponse retVal = ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).UpdateProjectIncrementalConfiguration(inValue);
            return retVal.Body.UpdateProjectIncrementalConfigurationResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.UpdateProjectIncrementalConfigurationResponse> CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.UpdateProjectIncrementalConfigurationAsync(CheckmarxTool.CxSDKWebService.UpdateProjectIncrementalConfigurationRequest request) {
            return base.Channel.UpdateProjectIncrementalConfigurationAsync(request);
        }
        
        public System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.UpdateProjectIncrementalConfigurationResponse> UpdateProjectIncrementalConfigurationAsync(string sessionID, long projectID, CheckmarxTool.CxSDKWebService.ProjectConfiguration projectConfiguration) {
            CheckmarxTool.CxSDKWebService.UpdateProjectIncrementalConfigurationRequest inValue = new CheckmarxTool.CxSDKWebService.UpdateProjectIncrementalConfigurationRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.UpdateProjectIncrementalConfigurationRequestBody();
            inValue.Body.sessionID = sessionID;
            inValue.Body.projectID = projectID;
            inValue.Body.projectConfiguration = projectConfiguration;
            return ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).UpdateProjectIncrementalConfigurationAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CheckmarxTool.CxSDKWebService.LoginResponse CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.Login(CheckmarxTool.CxSDKWebService.LoginRequest request) {
            return base.Channel.Login(request);
        }
        
        public CheckmarxTool.CxSDKWebService.CxWSResponseLoginData Login(CheckmarxTool.CxSDKWebService.Credentials applicationCredentials, int lcid) {
            CheckmarxTool.CxSDKWebService.LoginRequest inValue = new CheckmarxTool.CxSDKWebService.LoginRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.LoginRequestBody();
            inValue.Body.applicationCredentials = applicationCredentials;
            inValue.Body.lcid = lcid;
            CheckmarxTool.CxSDKWebService.LoginResponse retVal = ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).Login(inValue);
            return retVal.Body.LoginResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.LoginResponse> CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.LoginAsync(CheckmarxTool.CxSDKWebService.LoginRequest request) {
            return base.Channel.LoginAsync(request);
        }
        
        public System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.LoginResponse> LoginAsync(CheckmarxTool.CxSDKWebService.Credentials applicationCredentials, int lcid) {
            CheckmarxTool.CxSDKWebService.LoginRequest inValue = new CheckmarxTool.CxSDKWebService.LoginRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.LoginRequestBody();
            inValue.Body.applicationCredentials = applicationCredentials;
            inValue.Body.lcid = lcid;
            return ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).LoginAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CheckmarxTool.CxSDKWebService.LoginWithTokenResponse CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.LoginWithToken(CheckmarxTool.CxSDKWebService.LoginWithTokenRequest request) {
            return base.Channel.LoginWithToken(request);
        }
        
        public CheckmarxTool.CxSDKWebService.CxWSResponseLoginData LoginWithToken(string token, int lcid) {
            CheckmarxTool.CxSDKWebService.LoginWithTokenRequest inValue = new CheckmarxTool.CxSDKWebService.LoginWithTokenRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.LoginWithTokenRequestBody();
            inValue.Body.token = token;
            inValue.Body.lcid = lcid;
            CheckmarxTool.CxSDKWebService.LoginWithTokenResponse retVal = ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).LoginWithToken(inValue);
            return retVal.Body.LoginWithTokenResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.LoginWithTokenResponse> CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.LoginWithTokenAsync(CheckmarxTool.CxSDKWebService.LoginWithTokenRequest request) {
            return base.Channel.LoginWithTokenAsync(request);
        }
        
        public System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.LoginWithTokenResponse> LoginWithTokenAsync(string token, int lcid) {
            CheckmarxTool.CxSDKWebService.LoginWithTokenRequest inValue = new CheckmarxTool.CxSDKWebService.LoginWithTokenRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.LoginWithTokenRequestBody();
            inValue.Body.token = token;
            inValue.Body.lcid = lcid;
            return ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).LoginWithTokenAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CheckmarxTool.CxSDKWebService.LogoutResponse CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.Logout(CheckmarxTool.CxSDKWebService.LogoutRequest request) {
            return base.Channel.Logout(request);
        }
        
        public CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse Logout(string sessionID) {
            CheckmarxTool.CxSDKWebService.LogoutRequest inValue = new CheckmarxTool.CxSDKWebService.LogoutRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.LogoutRequestBody();
            inValue.Body.sessionID = sessionID;
            CheckmarxTool.CxSDKWebService.LogoutResponse retVal = ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).Logout(inValue);
            return retVal.Body.LogoutResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.LogoutResponse> CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.LogoutAsync(CheckmarxTool.CxSDKWebService.LogoutRequest request) {
            return base.Channel.LogoutAsync(request);
        }
        
        public System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.LogoutResponse> LogoutAsync(string sessionID) {
            CheckmarxTool.CxSDKWebService.LogoutRequest inValue = new CheckmarxTool.CxSDKWebService.LogoutRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.LogoutRequestBody();
            inValue.Body.sessionID = sessionID;
            return ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).LogoutAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CheckmarxTool.CxSDKWebService.GetAssociatedGroupsListResponse CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.GetAssociatedGroupsList(CheckmarxTool.CxSDKWebService.GetAssociatedGroupsListRequest request) {
            return base.Channel.GetAssociatedGroupsList(request);
        }
        
        public CheckmarxTool.CxSDKWebService.CxWSResponseGroupList GetAssociatedGroupsList(string SessionID) {
            CheckmarxTool.CxSDKWebService.GetAssociatedGroupsListRequest inValue = new CheckmarxTool.CxSDKWebService.GetAssociatedGroupsListRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.GetAssociatedGroupsListRequestBody();
            inValue.Body.SessionID = SessionID;
            CheckmarxTool.CxSDKWebService.GetAssociatedGroupsListResponse retVal = ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).GetAssociatedGroupsList(inValue);
            return retVal.Body.GetAssociatedGroupsListResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetAssociatedGroupsListResponse> CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.GetAssociatedGroupsListAsync(CheckmarxTool.CxSDKWebService.GetAssociatedGroupsListRequest request) {
            return base.Channel.GetAssociatedGroupsListAsync(request);
        }
        
        public System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetAssociatedGroupsListResponse> GetAssociatedGroupsListAsync(string SessionID) {
            CheckmarxTool.CxSDKWebService.GetAssociatedGroupsListRequest inValue = new CheckmarxTool.CxSDKWebService.GetAssociatedGroupsListRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.GetAssociatedGroupsListRequestBody();
            inValue.Body.SessionID = SessionID;
            return ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).GetAssociatedGroupsListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CheckmarxTool.CxSDKWebService.GetStatusOfSingleScanResponse CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.GetStatusOfSingleScan(CheckmarxTool.CxSDKWebService.GetStatusOfSingleScanRequest request) {
            return base.Channel.GetStatusOfSingleScan(request);
        }
        
        public CheckmarxTool.CxSDKWebService.CxWSResponseScanStatus GetStatusOfSingleScan(string sessionID, string runId) {
            CheckmarxTool.CxSDKWebService.GetStatusOfSingleScanRequest inValue = new CheckmarxTool.CxSDKWebService.GetStatusOfSingleScanRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.GetStatusOfSingleScanRequestBody();
            inValue.Body.sessionID = sessionID;
            inValue.Body.runId = runId;
            CheckmarxTool.CxSDKWebService.GetStatusOfSingleScanResponse retVal = ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).GetStatusOfSingleScan(inValue);
            return retVal.Body.GetStatusOfSingleScanResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetStatusOfSingleScanResponse> CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.GetStatusOfSingleScanAsync(CheckmarxTool.CxSDKWebService.GetStatusOfSingleScanRequest request) {
            return base.Channel.GetStatusOfSingleScanAsync(request);
        }
        
        public System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetStatusOfSingleScanResponse> GetStatusOfSingleScanAsync(string sessionID, string runId) {
            CheckmarxTool.CxSDKWebService.GetStatusOfSingleScanRequest inValue = new CheckmarxTool.CxSDKWebService.GetStatusOfSingleScanRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.GetStatusOfSingleScanRequestBody();
            inValue.Body.sessionID = sessionID;
            inValue.Body.runId = runId;
            return ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).GetStatusOfSingleScanAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CheckmarxTool.CxSDKWebService.GetScansDisplayDataForAllProjectsResponse CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.GetScansDisplayDataForAllProjects(CheckmarxTool.CxSDKWebService.GetScansDisplayDataForAllProjectsRequest request) {
            return base.Channel.GetScansDisplayDataForAllProjects(request);
        }
        
        public CheckmarxTool.CxSDKWebService.CxWSResponseScansDisplayData GetScansDisplayDataForAllProjects(string sessionID) {
            CheckmarxTool.CxSDKWebService.GetScansDisplayDataForAllProjectsRequest inValue = new CheckmarxTool.CxSDKWebService.GetScansDisplayDataForAllProjectsRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.GetScansDisplayDataForAllProjectsRequestBody();
            inValue.Body.sessionID = sessionID;
            CheckmarxTool.CxSDKWebService.GetScansDisplayDataForAllProjectsResponse retVal = ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).GetScansDisplayDataForAllProjects(inValue);
            return retVal.Body.GetScansDisplayDataForAllProjectsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetScansDisplayDataForAllProjectsResponse> CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.GetScansDisplayDataForAllProjectsAsync(CheckmarxTool.CxSDKWebService.GetScansDisplayDataForAllProjectsRequest request) {
            return base.Channel.GetScansDisplayDataForAllProjectsAsync(request);
        }
        
        public System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetScansDisplayDataForAllProjectsResponse> GetScansDisplayDataForAllProjectsAsync(string sessionID) {
            CheckmarxTool.CxSDKWebService.GetScansDisplayDataForAllProjectsRequest inValue = new CheckmarxTool.CxSDKWebService.GetScansDisplayDataForAllProjectsRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.GetScansDisplayDataForAllProjectsRequestBody();
            inValue.Body.sessionID = sessionID;
            return ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).GetScansDisplayDataForAllProjectsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CheckmarxTool.CxSDKWebService.GetScanSummaryResponse CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.GetScanSummary(CheckmarxTool.CxSDKWebService.GetScanSummaryRequest request) {
            return base.Channel.GetScanSummary(request);
        }
        
        public CheckmarxTool.CxSDKWebService.CxWSResponseScanSummary GetScanSummary(string SessionID, long ScanID) {
            CheckmarxTool.CxSDKWebService.GetScanSummaryRequest inValue = new CheckmarxTool.CxSDKWebService.GetScanSummaryRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.GetScanSummaryRequestBody();
            inValue.Body.SessionID = SessionID;
            inValue.Body.ScanID = ScanID;
            CheckmarxTool.CxSDKWebService.GetScanSummaryResponse retVal = ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).GetScanSummary(inValue);
            return retVal.Body.GetScanSummaryResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetScanSummaryResponse> CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.GetScanSummaryAsync(CheckmarxTool.CxSDKWebService.GetScanSummaryRequest request) {
            return base.Channel.GetScanSummaryAsync(request);
        }
        
        public System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetScanSummaryResponse> GetScanSummaryAsync(string SessionID, long ScanID) {
            CheckmarxTool.CxSDKWebService.GetScanSummaryRequest inValue = new CheckmarxTool.CxSDKWebService.GetScanSummaryRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.GetScanSummaryRequestBody();
            inValue.Body.SessionID = SessionID;
            inValue.Body.ScanID = ScanID;
            return ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).GetScanSummaryAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CheckmarxTool.CxSDKWebService.UpdateProjectConfigurationResponse CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.UpdateProjectConfiguration(CheckmarxTool.CxSDKWebService.UpdateProjectConfigurationRequest request) {
            return base.Channel.UpdateProjectConfiguration(request);
        }
        
        public CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse UpdateProjectConfiguration(string sessionID, long projectID, CheckmarxTool.CxSDKWebService.ProjectConfiguration projectConfiguration) {
            CheckmarxTool.CxSDKWebService.UpdateProjectConfigurationRequest inValue = new CheckmarxTool.CxSDKWebService.UpdateProjectConfigurationRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.UpdateProjectConfigurationRequestBody();
            inValue.Body.sessionID = sessionID;
            inValue.Body.projectID = projectID;
            inValue.Body.projectConfiguration = projectConfiguration;
            CheckmarxTool.CxSDKWebService.UpdateProjectConfigurationResponse retVal = ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).UpdateProjectConfiguration(inValue);
            return retVal.Body.UpdateProjectConfigurationResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.UpdateProjectConfigurationResponse> CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.UpdateProjectConfigurationAsync(CheckmarxTool.CxSDKWebService.UpdateProjectConfigurationRequest request) {
            return base.Channel.UpdateProjectConfigurationAsync(request);
        }
        
        public System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.UpdateProjectConfigurationResponse> UpdateProjectConfigurationAsync(string sessionID, long projectID, CheckmarxTool.CxSDKWebService.ProjectConfiguration projectConfiguration) {
            CheckmarxTool.CxSDKWebService.UpdateProjectConfigurationRequest inValue = new CheckmarxTool.CxSDKWebService.UpdateProjectConfigurationRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.UpdateProjectConfigurationRequestBody();
            inValue.Body.sessionID = sessionID;
            inValue.Body.projectID = projectID;
            inValue.Body.projectConfiguration = projectConfiguration;
            return ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).UpdateProjectConfigurationAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CheckmarxTool.CxSDKWebService.DeleteUserResponse CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.DeleteUser(CheckmarxTool.CxSDKWebService.DeleteUserRequest request) {
            return base.Channel.DeleteUser(request);
        }
        
        public CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse DeleteUser(string sessionID, int userID) {
            CheckmarxTool.CxSDKWebService.DeleteUserRequest inValue = new CheckmarxTool.CxSDKWebService.DeleteUserRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.DeleteUserRequestBody();
            inValue.Body.sessionID = sessionID;
            inValue.Body.userID = userID;
            CheckmarxTool.CxSDKWebService.DeleteUserResponse retVal = ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).DeleteUser(inValue);
            return retVal.Body.DeleteUserResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.DeleteUserResponse> CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.DeleteUserAsync(CheckmarxTool.CxSDKWebService.DeleteUserRequest request) {
            return base.Channel.DeleteUserAsync(request);
        }
        
        public System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.DeleteUserResponse> DeleteUserAsync(string sessionID, int userID) {
            CheckmarxTool.CxSDKWebService.DeleteUserRequest inValue = new CheckmarxTool.CxSDKWebService.DeleteUserRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.DeleteUserRequestBody();
            inValue.Body.sessionID = sessionID;
            inValue.Body.userID = userID;
            return ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).DeleteUserAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CheckmarxTool.CxSDKWebService.GetAllUsersResponse CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.GetAllUsers(CheckmarxTool.CxSDKWebService.GetAllUsersRequest request) {
            return base.Channel.GetAllUsers(request);
        }
        
        public CheckmarxTool.CxSDKWebService.CxWSResponseUserData GetAllUsers(string sessionID) {
            CheckmarxTool.CxSDKWebService.GetAllUsersRequest inValue = new CheckmarxTool.CxSDKWebService.GetAllUsersRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.GetAllUsersRequestBody();
            inValue.Body.sessionID = sessionID;
            CheckmarxTool.CxSDKWebService.GetAllUsersResponse retVal = ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).GetAllUsers(inValue);
            return retVal.Body.GetAllUsersResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetAllUsersResponse> CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.GetAllUsersAsync(CheckmarxTool.CxSDKWebService.GetAllUsersRequest request) {
            return base.Channel.GetAllUsersAsync(request);
        }
        
        public System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetAllUsersResponse> GetAllUsersAsync(string sessionID) {
            CheckmarxTool.CxSDKWebService.GetAllUsersRequest inValue = new CheckmarxTool.CxSDKWebService.GetAllUsersRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.GetAllUsersRequestBody();
            inValue.Body.sessionID = sessionID;
            return ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).GetAllUsersAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CheckmarxTool.CxSDKWebService.CreateScanReportResponse CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.CreateScanReport(CheckmarxTool.CxSDKWebService.CreateScanReportRequest request) {
            return base.Channel.CreateScanReport(request);
        }
        
        public CheckmarxTool.CxSDKWebService.CxWSCreateReportResponse CreateScanReport(string sessionID, CheckmarxTool.CxSDKWebService.CxWSReportRequest reportRequest) {
            CheckmarxTool.CxSDKWebService.CreateScanReportRequest inValue = new CheckmarxTool.CxSDKWebService.CreateScanReportRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.CreateScanReportRequestBody();
            inValue.Body.sessionID = sessionID;
            inValue.Body.reportRequest = reportRequest;
            CheckmarxTool.CxSDKWebService.CreateScanReportResponse retVal = ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).CreateScanReport(inValue);
            return retVal.Body.CreateScanReportResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.CreateScanReportResponse> CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.CreateScanReportAsync(CheckmarxTool.CxSDKWebService.CreateScanReportRequest request) {
            return base.Channel.CreateScanReportAsync(request);
        }
        
        public System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.CreateScanReportResponse> CreateScanReportAsync(string sessionID, CheckmarxTool.CxSDKWebService.CxWSReportRequest reportRequest) {
            CheckmarxTool.CxSDKWebService.CreateScanReportRequest inValue = new CheckmarxTool.CxSDKWebService.CreateScanReportRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.CreateScanReportRequestBody();
            inValue.Body.sessionID = sessionID;
            inValue.Body.reportRequest = reportRequest;
            return ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).CreateScanReportAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CheckmarxTool.CxSDKWebService.GetScanReportStatusResponse CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.GetScanReportStatus(CheckmarxTool.CxSDKWebService.GetScanReportStatusRequest request) {
            return base.Channel.GetScanReportStatus(request);
        }
        
        public CheckmarxTool.CxSDKWebService.CxWSReportStatusResponse GetScanReportStatus(string SessionID, long ReportID) {
            CheckmarxTool.CxSDKWebService.GetScanReportStatusRequest inValue = new CheckmarxTool.CxSDKWebService.GetScanReportStatusRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.GetScanReportStatusRequestBody();
            inValue.Body.SessionID = SessionID;
            inValue.Body.ReportID = ReportID;
            CheckmarxTool.CxSDKWebService.GetScanReportStatusResponse retVal = ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).GetScanReportStatus(inValue);
            return retVal.Body.GetScanReportStatusResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetScanReportStatusResponse> CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.GetScanReportStatusAsync(CheckmarxTool.CxSDKWebService.GetScanReportStatusRequest request) {
            return base.Channel.GetScanReportStatusAsync(request);
        }
        
        public System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetScanReportStatusResponse> GetScanReportStatusAsync(string SessionID, long ReportID) {
            CheckmarxTool.CxSDKWebService.GetScanReportStatusRequest inValue = new CheckmarxTool.CxSDKWebService.GetScanReportStatusRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.GetScanReportStatusRequestBody();
            inValue.Body.SessionID = SessionID;
            inValue.Body.ReportID = ReportID;
            return ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).GetScanReportStatusAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CheckmarxTool.CxSDKWebService.GetScanReportResponse CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.GetScanReport(CheckmarxTool.CxSDKWebService.GetScanReportRequest request) {
            return base.Channel.GetScanReport(request);
        }
        
        public CheckmarxTool.CxSDKWebService.CxWSResponseScanResults GetScanReport(string SessionID, long ReportID) {
            CheckmarxTool.CxSDKWebService.GetScanReportRequest inValue = new CheckmarxTool.CxSDKWebService.GetScanReportRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.GetScanReportRequestBody();
            inValue.Body.SessionID = SessionID;
            inValue.Body.ReportID = ReportID;
            CheckmarxTool.CxSDKWebService.GetScanReportResponse retVal = ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).GetScanReport(inValue);
            return retVal.Body.GetScanReportResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetScanReportResponse> CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.GetScanReportAsync(CheckmarxTool.CxSDKWebService.GetScanReportRequest request) {
            return base.Channel.GetScanReportAsync(request);
        }
        
        public System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetScanReportResponse> GetScanReportAsync(string SessionID, long ReportID) {
            CheckmarxTool.CxSDKWebService.GetScanReportRequest inValue = new CheckmarxTool.CxSDKWebService.GetScanReportRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.GetScanReportRequestBody();
            inValue.Body.SessionID = SessionID;
            inValue.Body.ReportID = ReportID;
            return ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).GetScanReportAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CheckmarxTool.CxSDKWebService.ExecuteDataRetentionResponse CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.ExecuteDataRetention(CheckmarxTool.CxSDKWebService.ExecuteDataRetentionRequest request) {
            return base.Channel.ExecuteDataRetention(request);
        }
        
        public CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse ExecuteDataRetention(string SessionID, CheckmarxTool.CxSDKWebService.CxDataRetentionConfiguration dataRetentionConfiguration) {
            CheckmarxTool.CxSDKWebService.ExecuteDataRetentionRequest inValue = new CheckmarxTool.CxSDKWebService.ExecuteDataRetentionRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.ExecuteDataRetentionRequestBody();
            inValue.Body.SessionID = SessionID;
            inValue.Body.dataRetentionConfiguration = dataRetentionConfiguration;
            CheckmarxTool.CxSDKWebService.ExecuteDataRetentionResponse retVal = ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).ExecuteDataRetention(inValue);
            return retVal.Body.ExecuteDataRetentionResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.ExecuteDataRetentionResponse> CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.ExecuteDataRetentionAsync(CheckmarxTool.CxSDKWebService.ExecuteDataRetentionRequest request) {
            return base.Channel.ExecuteDataRetentionAsync(request);
        }
        
        public System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.ExecuteDataRetentionResponse> ExecuteDataRetentionAsync(string SessionID, CheckmarxTool.CxSDKWebService.CxDataRetentionConfiguration dataRetentionConfiguration) {
            CheckmarxTool.CxSDKWebService.ExecuteDataRetentionRequest inValue = new CheckmarxTool.CxSDKWebService.ExecuteDataRetentionRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.ExecuteDataRetentionRequestBody();
            inValue.Body.SessionID = SessionID;
            inValue.Body.dataRetentionConfiguration = dataRetentionConfiguration;
            return ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).ExecuteDataRetentionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CheckmarxTool.CxSDKWebService.StopDataRetentionResponse CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.StopDataRetention(CheckmarxTool.CxSDKWebService.StopDataRetentionRequest request) {
            return base.Channel.StopDataRetention(request);
        }
        
        public CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse StopDataRetention(string SessionID) {
            CheckmarxTool.CxSDKWebService.StopDataRetentionRequest inValue = new CheckmarxTool.CxSDKWebService.StopDataRetentionRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.StopDataRetentionRequestBody();
            inValue.Body.SessionID = SessionID;
            CheckmarxTool.CxSDKWebService.StopDataRetentionResponse retVal = ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).StopDataRetention(inValue);
            return retVal.Body.StopDataRetentionResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.StopDataRetentionResponse> CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.StopDataRetentionAsync(CheckmarxTool.CxSDKWebService.StopDataRetentionRequest request) {
            return base.Channel.StopDataRetentionAsync(request);
        }
        
        public System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.StopDataRetentionResponse> StopDataRetentionAsync(string SessionID) {
            CheckmarxTool.CxSDKWebService.StopDataRetentionRequest inValue = new CheckmarxTool.CxSDKWebService.StopDataRetentionRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.StopDataRetentionRequestBody();
            inValue.Body.SessionID = SessionID;
            return ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).StopDataRetentionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CheckmarxTool.CxSDKWebService.GetTeamLdapGroupsMappingResponse CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.GetTeamLdapGroupsMapping(CheckmarxTool.CxSDKWebService.GetTeamLdapGroupsMappingRequest request) {
            return base.Channel.GetTeamLdapGroupsMapping(request);
        }
        
        public CheckmarxTool.CxSDKWebService.CxWSResponseTeamLdapGroupMappingData GetTeamLdapGroupsMapping(string sessionId, string teamId) {
            CheckmarxTool.CxSDKWebService.GetTeamLdapGroupsMappingRequest inValue = new CheckmarxTool.CxSDKWebService.GetTeamLdapGroupsMappingRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.GetTeamLdapGroupsMappingRequestBody();
            inValue.Body.sessionId = sessionId;
            inValue.Body.teamId = teamId;
            CheckmarxTool.CxSDKWebService.GetTeamLdapGroupsMappingResponse retVal = ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).GetTeamLdapGroupsMapping(inValue);
            return retVal.Body.GetTeamLdapGroupsMappingResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetTeamLdapGroupsMappingResponse> CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.GetTeamLdapGroupsMappingAsync(CheckmarxTool.CxSDKWebService.GetTeamLdapGroupsMappingRequest request) {
            return base.Channel.GetTeamLdapGroupsMappingAsync(request);
        }
        
        public System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.GetTeamLdapGroupsMappingResponse> GetTeamLdapGroupsMappingAsync(string sessionId, string teamId) {
            CheckmarxTool.CxSDKWebService.GetTeamLdapGroupsMappingRequest inValue = new CheckmarxTool.CxSDKWebService.GetTeamLdapGroupsMappingRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.GetTeamLdapGroupsMappingRequestBody();
            inValue.Body.sessionId = sessionId;
            inValue.Body.teamId = teamId;
            return ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).GetTeamLdapGroupsMappingAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CheckmarxTool.CxSDKWebService.SetTeamLdapGroupsMappingResponse CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.SetTeamLdapGroupsMapping(CheckmarxTool.CxSDKWebService.SetTeamLdapGroupsMappingRequest request) {
            return base.Channel.SetTeamLdapGroupsMapping(request);
        }
        
        public CheckmarxTool.CxSDKWebService.CxWSBasicRepsonse SetTeamLdapGroupsMapping(string sessionId, string teamId, CheckmarxTool.CxSDKWebService.CxWSLdapGroupMapping[] ldapGroups) {
            CheckmarxTool.CxSDKWebService.SetTeamLdapGroupsMappingRequest inValue = new CheckmarxTool.CxSDKWebService.SetTeamLdapGroupsMappingRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.SetTeamLdapGroupsMappingRequestBody();
            inValue.Body.sessionId = sessionId;
            inValue.Body.teamId = teamId;
            inValue.Body.ldapGroups = ldapGroups;
            CheckmarxTool.CxSDKWebService.SetTeamLdapGroupsMappingResponse retVal = ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).SetTeamLdapGroupsMapping(inValue);
            return retVal.Body.SetTeamLdapGroupsMappingResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.SetTeamLdapGroupsMappingResponse> CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap.SetTeamLdapGroupsMappingAsync(CheckmarxTool.CxSDKWebService.SetTeamLdapGroupsMappingRequest request) {
            return base.Channel.SetTeamLdapGroupsMappingAsync(request);
        }
        
        public System.Threading.Tasks.Task<CheckmarxTool.CxSDKWebService.SetTeamLdapGroupsMappingResponse> SetTeamLdapGroupsMappingAsync(string sessionId, string teamId, CheckmarxTool.CxSDKWebService.CxWSLdapGroupMapping[] ldapGroups) {
            CheckmarxTool.CxSDKWebService.SetTeamLdapGroupsMappingRequest inValue = new CheckmarxTool.CxSDKWebService.SetTeamLdapGroupsMappingRequest();
            inValue.Body = new CheckmarxTool.CxSDKWebService.SetTeamLdapGroupsMappingRequestBody();
            inValue.Body.sessionId = sessionId;
            inValue.Body.teamId = teamId;
            inValue.Body.ldapGroups = ldapGroups;
            return ((CheckmarxTool.CxSDKWebService.CxSDKWebServiceSoap)(this)).SetTeamLdapGroupsMappingAsync(inValue);
        }
    }
}
